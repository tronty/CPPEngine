[Vertex shader]

float4x4 mvp;
float4x4 trans;

struct VsOut {
	float4 Pos: POSITION;
	float2 tc0 : TEXCOORD0;
};

VsOut main(float4 pos: POSITION, float2 tc0 : TEXCOORD0){
	VsOut Out;
	float4	tPos;

	tPos = float4(mul(trans, pos));
	tPos.w = 1.0;
	Out.Pos = mul(mvp, tPos);
	Out.tc0 = tc0;
	
	return Out;
}

[Fragment shader]

sampler diffuseMap: register(s0);
float4 LightColor;

float4 main(float2 tc0: TEXCOORD0) : COLOR {	
	return tex2D(diffuseMap, tc0)*LightColor;
}
