float4 GetPixelColor_(Texture2D<float4> atex, float2 aTexCoord)
{
	uint width_;
	uint height_;
	atex.GetDimensions(width_, height_);
	float2 dim_;
	dim_.x=float(width_-1);
	dim_.y=float(height_-1);
	float4 col=atex.Load(int3(dim_.x*aTexCoord.x, dim_.y*aTexCoord.y, 0));
	col.w=1;
	return col;
}
#define SAMPLE2D(TEX, TEXCOORD) GetPixelColor_(TEX, TEXCOORD)
#define SAMPLER2D Texture2D<float4>

float4x4 mvp;
float3 camPos;

struct VsIn
{
	float2 pos: POSITION
};

struct VsOut
{
	float4 pos      : SV_POSITION;
	float2 texCoord : TEXCOORD0;
	float3 normal   : TEXCOORD1;
	float  fog      : TEXCOORD2;
	float2 scale    : TEXCOORD3;
};

#if 1
Texture2D Terrain;
#elif 0
Texture2D    Terrain : register(t0);
SamplerState g_samPoint : register(s0);
#elif 0
SAMPLER2D Terrain;
#elif 0
Texture2D Terrain;
SamplerState g_samPoint
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
#endif

VsOut mainVS(VSIn In)
{
    #if 0
	float4 height = Terrain.sample(g_samPoint, float4(In.pos.xy + 0.5, 0.0, 0.0));
    #elif 1
        float4 height = Terrain.Load( In.pos.xy );
    #elif 0
	float4 height = SAMPLE2D(Terrain, In.pos.xy);
    #elif 0
	//float fOffset)   
    	//float tCoord = (fOffset) / 300.0;
    	float4 height = Terrain.SampleLevel( g_samPoint, In.pos.xy, 0 );
    #elif 0
	float4 height = Terrain.Sample(g_samPoint, In.pos.xy, 0);
    #endif	
	float4 vertex = float4(4.0 * In.pos.x, height.w, 4.0 * In.pos.y, 1);
	VsOut Out;
	Out.pos = mul(mvp, vertex);
	Out.texCoord = pos * 16.0;
	Out.normal = height.xyz;
	Out.fog = saturate(0.65 * length(vertex.xyz - camPos));
	Out.scale = saturate(height.w * 1.2 - 0.3) * float2(0.6, 0.5);
	return Out;
}

Texture2D Ground;
SamplerState g_samLinear
{
    Filter = ANISOTROPIC;
    AddressU = Clamp;
    AddressV = Clamp;
};
float3 lightDir;
float4 fogColor;

float4 mainPS(VS_Output input) : SV_Target
{
	float diffuse = saturate(dot(lightDir, input.normal) * input.scale.x + input.scale.y);
	float4 base = Ground.sample(g_samLinear, input.texCoord);
	return lerp(diffuse * base, fogColor, input.fog);
}

