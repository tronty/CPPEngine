float4x4 mvp;

struct VsIn
{
	float4 pos: POSITION
};

struct VsOut
{
	float4 pos:       SV_POSITION;
	float3 cubeCoord: TEXCOORD0;
};

VsOut mainVS(VsIn In)
{
	VsOut Out;
	Out.pos = mul(mvp, In.pos);
	// Nvidia seems to have some kind of weird precision problem here
	Out.pos.z *= 0.99999;
	Out.cubeCoord = In.pos.xyz;
	return Out;
}

TextureCube	Env : register( t0 );
SamplerState g_sam : register( s0 );

float4 fogColor;
float2 scaleBias;

float4 mainPS(VS_Output input) : SV_Target
{
	float4 sky = Env.sample(g_sam, input.cubeCoord);
	float fog = saturate(normalize(input.cubeCoord).y * scaleBias.x + scaleBias.y);
	fog *= fog * (3 - 2 * fog);
	return lerp(fogColor, sky, fog);
}

