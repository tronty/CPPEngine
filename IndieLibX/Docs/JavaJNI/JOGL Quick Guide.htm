<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->
<html style="" class=" js no-touch csstransforms3d csstransitions"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<!-- Basic -->
<meta charset="utf-8">
<title>JOGL Quick Guide</title>
<meta name="description" content="JOGL Quick Guide - Learn JOGL in simple and easy steps using this beginner's tutorial containing basic to advanced knowledge starting from Introduction, Overview, Installation, Basic Template, Canvas with AWT, Swing, GLJPanel Class, Graphical Shapes, Transformation of Objects, Coloring, Scaling, Rotation, Lighting, 3d Graphics, Appendix.">
<meta name="keywords" content="JOGL, Tutorial, Introduction, Overview, Installation, Basic Template, Canvas with AWT, Swing, GLJPanel Class, Graphical Shapes, Transformation of Objects, Coloring, Scaling, Rotation, Lighting, 3d Graphics, Appendix.">
<!-- base href="https://www.tutorialspoint.com/" -->
<link rel="shortcut icon" href="https://www.tutorialspoint.com/favicon.ico" type="image/x-icon">
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="website">
<meta property="fb:app_id" content="471319149685276">
<meta property="og:site_name" content="www.tutorialspoint.com">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script src="JOGL%20Quick%20Guide_tiedostot/ca-pub-7133395778201029.js"></script><script src="JOGL%20Quick%20Guide_tiedostot/adsbygoogle.js"></script><script src="JOGL%20Quick%20Guide_tiedostot/osd.js"></script><script src="JOGL%20Quick%20Guide_tiedostot/show_ads_impl.js" id="google_shimpl"></script><script src="JOGL%20Quick%20Guide_tiedostot/ca-pub-7133395778201029.js"></script><script type="text/javascript" src="JOGL%20Quick%20Guide_tiedostot/script-min-v4.js"></script>
<link rel="stylesheet" href="JOGL%20Quick%20Guide_tiedostot/style-min.css">
<script>
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
#privacy-banner {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    max-width: 100%;
    padding: 1rem .5rem;
    background: #fff;
    z-index: 1030;
    color: #000;
    font-size: 14px;
    margin: 0;
    display: none;
    border-top: 2px solid rgb(130, 130, 130);
  }
  #privacy-banner p {
    margin: 0;
    color: #000;
    text-align: center;
  }
  #privacy-banner a {
    text-decoration: none;
    margin: 20px auto 0 auto;
    display: block;
    max-width: 150px;
  }
  #privacy-banner a:hover {
    text-decoration: underline;
  }
  #banner-learn {
    color: #000;
  }
  #banner-accept {
    padding: 7px 15px;
    color: #fff;
    border-radius: 5px;
    background:#737373 !important;
  }
  @media (min-width: 768px) {
    #privacy-banner {
      padding: 1.5rem .5rem;
    }
    #privacy-banner a {
      display: inline-block;
      margin: 0 10px;
    }
}
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #0271bd !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #0271bd url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #0271bd !important;}
.submenu-item{ border-bottom: 2px solid #0271bd !important; border-top: 2px solid #0271bd !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#0271bd; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
<link rel="preload" href="JOGL%20Quick%20Guide_tiedostot/integrator.js" as="script"><script type="text/javascript" src="JOGL%20Quick%20Guide_tiedostot/integrator.js"></script><link rel="preload" href="JOGL%20Quick%20Guide_tiedostot/integrator_002.js" as="script"><script type="text/javascript" src="JOGL%20Quick%20Guide_tiedostot/integrator_002.js"></script><link rel="preload" href="JOGL%20Quick%20Guide_tiedostot/show_ads_impl.js" as="script"></head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img src="JOGL%20Quick%20Guide_tiedostot/loading-cg.gif" alt="" width="70" height="70">
   </div>
</div>
<div id="right_obs" class="display-none" onclick="close_obs_sidenav()"></div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="https://www.tutorialspoint.com/index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="JOGL%20Quick%20Guide_tiedostot/logo.png">
      </a>
      </h1>			
      <ul class="tp-inline-block pull-right" id="tp-head-icons">
        <li>
           <div class="tp-second-nav tp-display-none tp-pointer" onclick="openNav()">
              <i class="fa fa-th-large fa-lg"></i>
           </div>
        </li>
     </ul>
     <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 7528px!important"> <i class="icon icon-bars"></i> </button>
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="https://www.tutorialspoint.com/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a target="_blank" href="https://www.tutorialspoint.com/programming_examples/"><i class="fa fa-cubes"></i> &nbsp;Examples</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="JOGL%20Quick%20Guide_tiedostot/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="https://www.tutorialspoint.com/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="https://www.tutorialspoint.com/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
    </div>
     <div class="sidenav" id="mySidenav">
     <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="https://www.tutorialspoint.com/index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-send"></i> Q/A </a> </li>
               <li class="dropdown"><a class="dropdown" href="https://www.tutorialspoint.com/tutorialslibrary.htm"><span class="tut-lib"> Library </span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/tutor_connect/index.php"><i class="fa-user"> </i> Tutors</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://store.tutorialspoint.com/"><i class="fa-usd"></i> Store </a> </li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
        </div>
      </div>	
     </div>	
   	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<div class="mini-logo">
<img src="JOGL%20Quick%20Guide_tiedostot/jogl-mini-logo.jpg" alt="JOGL Tutorial">
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">JOGL Tutorial</li>
<li><a href="https://www.tutorialspoint.com/jogl/index.htm">JOGL - Home</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_overview.htm">JOGL - Overview</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_installation.htm">JOGL - Installation</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">JOGL Basic Templates</li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_api_basic_template.htm">JOGL - API for Basic Templates</a></li>   
<li><a href="https://www.tutorialspoint.com/jogl/jogl_canvas_with_awt.htm">JOGL - Canvas with AWT</a></li>      
<li><a href="https://www.tutorialspoint.com/jogl/jogl_canvas_with_swing.htm">JOGL - Canvas with Swing</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_gljpanel_class.htm">JOGL - GLJPanel Class</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">JOGL Graphical Shapes</li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_drawing_basics.htm">JOGL - Drawing Basics</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/drawing_with_gl_lines.htm">JOGL - Drawing with GL_Lines</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_pre_defined_shapes.htm">JOGL - Pre-defined shapes</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">JOGL Effects &amp; Transformation</li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_transformation.htm">JOGL - Transformation</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_coloring.htm">JOGL - Coloring</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_scaling.htm">JOGL - Scaling</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_rotation.htm">JOGL - Rotation</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_lighting.htm">JOGL - Lighting</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">JOGL 3D Graphics</li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_3d_basics.htm">JOGL - 3D Basics</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_3d_triangle.htm">JOGL - 3D Triangle</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_3d_cube.htm">JOGL - 3D Cube</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_appendix.htm">JOGL - Appendix</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">JOGL Useful Resources</li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm" style="background-color: rgb(214, 214, 214);">JOGL - Quick Guide</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_useful_resources.htm">JOGL - Useful Resources</a></li>
<li><a href="https://www.tutorialspoint.com/jogl/jogl_discussion.htm">JOGL - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="https://www.tutorialspoint.com/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>JOGL - Quick Guide</h1>
<hr>
<div style="padding-bottom:5px;padding-left:10px;text-align: center;">Advertisements</div>
<div style="text-align: center;">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("middle-col")[0].clientWidth - 15;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript" src="JOGL%20Quick%20Guide_tiedostot/show_ads.js"> 
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:150px;margin:0;padding:0;position:relative;visibility:visible;width:599px;background-color:transparent;"><ins id="aswift_0_anchor" style="display:block;border:none;height:150px;margin:0;padding:0;position:relative;visibility:visible;width:599px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;border:0px;width:599px;height:150px;" width="599" height="150" frameborder="0"></iframe></ins></ins>
</div>
<hr>
<div class="pre-btn">
<a href="https://www.tutorialspoint.com/jogl/jogl_appendix.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="https://www.tutorialspoint.com/jogl/jogl_useful_resources.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr>
<h1>JOGL - Overview</h1>
<p>This chapter introduces OpenGL, its functions, the OpenGL bindings in
 java (GL4java, LWJGL, JOGL), and the advantages of JOGL over other 
OpenGL bindings.</p>
<p><b>J</b>ava binding for <b>O</b>pen<b>GL</b> (JOGL) is the recent 
binding for OpenGL graphics API in Java. It is a wrapper library, which 
can access OpenGL API, and it is designed to create 2D and 3D graphics 
applications coded in Java. JOGL is an open-source library initially 
developed by former MIT graduate students Ken Russell and Chris Kline. 
Later, it was adopted by the gaming group at Sun Microsystems, and now 
it is maintained by Java on Graphics Audio and Processing (JOGAMP). JOGL
 functions on various operating systems such as Windows, Solaris, Mac OS
 X, and Linux (on x86).</p>
<h2>What is OpenGL?</h2>
<p>OpenGL stands for Open Graphics Library, which is a collection of 
commands to create 2D and 3D graphics. With OpenGL, you can create 
complicated 3D shapes using very basic primitives such as points, lines,
 polygons, bitmaps, and images.</p>
<p>Here are a few features of OpenGL −</p>
<ul class="list">
<li><p>It can work on multiple platforms.</p></li>
<li><p>It has bindings in several languages such as C++, Python, etc</p></li>
<li><p>It can render 2D and 3D vector graphics.</p></li>
<li><p>It interacts with Graphical Processing Unit (GPU) for achieving speedy and
high quality rendering. Rendering is the process of creating an image from a 2D or 3D model.</p></li>
<li><p>It is an industry standard API for writing 3D Graphics applications. For example, games, screensavers, etc.</p></li>
<li><p>It contains around 150 commands, which programmers can use to specify objects and operations to develop applications.</p></li>
<li><p>It contains OpenGL Utility Library (GLU) that provides various 
modeling features, such as quadric surfaces and NURBS curves. GLU is a 
standard component of OpenGL.</p></li>
<li><p>The design of OpenGL is focused on efficiency, effectiveness, and
 its implementation on multiple platforms using multiple languages. To 
maintain simplicity of an OpenGL API, windowing tasks are not included.</p></li>
</ul>
<p>Therefore, OpenGL depends on other programming languages for windowing tasks.</p>
<h2>Java Binding for OpenGL API</h2>
<p>It is a Java Specification Request (JSR) API specification, which allows to use
OpenGL on Java platform.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Specifications</th>
<th>Details</th>
</tr>
<tr>
<td>JSR 231</td>
<td>This Java binding package supports Java SE platform.</td>
</tr>
<tr>
<td>JSR 239</td>
<td>This Java binding package supports Java ME platform.</td>
</tr>
</tbody></table>
<p>There are various OpenGL bindings in Java. They are discussed below</p>
<h3>GL4java</h3>
<p>It is known as OpenGL for Java technology. It has links to OpenGL 1.3
 and to nearly all vendor extensions. Also, it can be used with Abstract
 Window Toolkit (AWT) and Swings. It is a game focused OpenGL binding, 
which is a single window that displays full screen applications.</p>
<h3>LWJGL</h3>
<ul class="list">
<li><p>Light Weight Java Game Library (LWJGL), uses OpenGL 1.5 and works with latest version of java.</p></li>
<li><p>It can use full screen capabilities of JSE 1.4. It has limited support for AWT/ Swings.</p></li>
<li><p>It is suitable for lightweight devices such as mobile phones, embedded devices, etc.</p></li>
</ul>
<h3>JOGL</h3>
<ul class="list">
<li><p>JOGL focuses only on 2D and 3D Rendering. The interfaces dealing with sound and input-output are not included in JOGL.</p></li>
<li><p>It includes Graphics Utility Library (GLU), GL Utility toolkit (GLUT), and its own API - Native Windowing Toolkit (NEWT).</p></li>
</ul>
<h2>Why JOGL?</h2>
<ul class="list">
<li><p>It provides full access to the OpenGL APIs (version 1.0, 4.3, ES 1, ES 2 and
ES 3) as well as nearly all the vendor extensions. Hence, all the features in OpenGL are included in JOGL.</p></li>
<li><p>JOGL integrates with the AWT, Swing, and Standard Widget Toolkit (SWT).
It also includes its own Native Windowing Toolkit (NEWT). Hence, it provides
complete support for windowing.</p></li>
</ul>
<h2>History of JOGL</h2>
<ul class="list">
<li><p>1992 − Silicon Graphics Inc. released the first OpenGL specification.</p></li>
<li><p>2003 − Java.net website was launched with new features and JOGL was published for the first time on the same website.</p></li>
<li><p>2010 − Since year 2010, it has been independent open source 
project under BSD license, which is a liberal license for computer 
software.</p></li>
</ul>
<h1>JOGL - Installation</h1>
<p>This chapter covers setting up of the environment to use JOGL on your system
using different Integrated Development Environments (IDEs).</p>
<h2>Installing JOGL</h2>
<p>For JOGL Installation, you need to have following system requirements −</p>
<h3>System Requirements</h3>
<p>The first requirement is to have the Java Development Kit (JDK) installed on your machine.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Requirement</th>
<th>Description</th>
</tr>
<tr>
<td>JDK Version</td>
<td>1.4 or above</td>
</tr>
<tr>
<td>Memory</td>
<td>no minimum requirement</td>
</tr>
<tr>
<td>Disk Space</td>
<td>no minimum requirement</td>
</tr>
<tr>
<td>Operating System</td>
<td>no minimum requirement</td>
</tr>
</tbody></table>
<p>You need to follow the given steps to setup your environment to start with JOGL
application development −</p>
<h3>Step 1 - Verifying Java Installation on Your Machine</h3>
<p>Open console of your system and execute the following java command −</p>
<table class="table table-bordered">
<tbody><tr>
<th>Platform</th>
<th>TASK</th>
<th>COMMAND</th>
</tr>
<tr>
<td>Windows</td>
<td>Open Command Console</td>
<td>C:\&gt;java-version</td>
</tr>
<tr>
<td>Linux</td>
<td>Open Command terminal</td>
<td>$ java -version</td>
</tr>
<tr>
<td>MAC</td>
<td>Open Terminal</td>
<td>Machine:~ joseph$ java -version</td>
</tr>
</tbody></table>
<p>Verify the output on the respective operating system.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Platform</th>
<th>Output</th>
</tr>
<tr>
<td>Windows</td>
<td><p><b>Java “1.6.0.21”</b></p>
<p>java(TM) SE Runtime Environment(build 1..6.0_21-b07)Java HotSpot(TM) Client VM(build 17.0-b7, mixed mode, sharing)</p></td>
</tr>
<tr>
<td>Linux</td>
<td><p><b>Java “1.6.0.21”</b></p>
<p>java(TM) SE Runtime Environment(build 1..6.0_21-b07)Java HotSpot(TM) Client VM(build 17.0-b7, mixed mode, sharing)</p>
</td>
</tr>
<tr>
<td>MAC</td>
<td><p><b>Java “1.6.0.21”</b></p>
<p>java(TM) SE Runtime Environment(build 1..6.0_21-b07)Java HotSpot(TM) Client VM(build 17.0-b7, mixed mode, sharing)</p></td>
</tr>
</tbody></table>
<h3>Step 2 – Setting up Java Development Kit (JDK)</h3>
<p>If Java is not installed on your machine, then you need to install Java SDK from
the Oracle website: <a rel="nofollow" target="_blank" href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">
Oracle</a>. You can find instructions for installing the JDK from the 
downloaded files. You need to follow the given instructions to install 
and configure the setup. Finally, set PATH and JAVA_HOME environment 
variables to refer to the directory that contains java.exe and javac.exe
 files, typically java_install_dir/bin and java_install_dir 
respectively.</p>
<p>Set <b>Java-home</b> environment variable to point to the base directory location on the same path, where Java is installed on your machine.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Platform</th>
<th>Command</th>
</tr>
<tr>
<td>Windows</td>
<td>Set the environment variable JAVA_HOME to C:\ProgramFiles\Java\Jdk1.6.0_21</td>
</tr>
<tr>
<td>Linux</td>
<td>Export JAVA_HOME=/usr/local/java-current</td>
</tr>
<tr>
<td>MAC</td>
<td>Export JAVA_HOME=/Library/Java/Home</td>
</tr>
</tbody></table>
<p>Append Java compiler location to System Path as follows −</p>
<table class="table table-bordered">
<tbody><tr>
<th>Platform</th>
<th>Command</th>
</tr>
<tr>
<td>Windows</td>
<td>Append the string ;%JAVA_HOME% bin at the end of the system variable and path</td>
</tr>
<tr>
<td>Linux</td>
<td>Export PATH=$PATH:$JAVA_HOME/bin/</td>
</tr>
<tr>
<td>MAC</td>
<td>Not required</td>
</tr>
</tbody></table>
<h3>Step 3 – Downloading JOGL</h3>
<ul class="list">
<li><p>You can download latest version of JOGL from the website <a href="http://jogamp.org/" rel="nofollow" target="_blank">www.jogamp.org</a></p></li>
<li><p>Go to the home page of <a rel="nofollow" target="_blank" href="http://jogamp.org/">www.jogamp.org</a></p></li>
<li><p>Click on Builds/Downloads &gt; Current (zip).</p></li>
</ul>
<img src="JOGL%20Quick%20Guide_tiedostot/jogamp_home_page.jpg" alt="Jogamp Home Page">
<p>This takes you to the list of .jar files for all APIs maintained by the website.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/jar_files_list.jpg" alt="JAR Files List">
<ul class="list">
<li><p>Download the library .jar file <b>jogamp-all-platforms.7z</b>, java documentations for OpenGL native library <b>glugen-javadoc.7z</b>, and JOGL <b>jogl-javadocs.7z.</b></p></li>
<li><p>Extract the downloaded .jar files using any zip extracting software.</p></li>
</ul>
<p>When you open the extracted folder, you will find jar folder, source-codes, and
other files.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/source_code_folder.jpg" alt="Source Code Folder">
<p>Get the source codes <b>gluegen-java-src.zip</b> and <b>jogl-java-src.zip</b> for supporting IDE. This is optional.</p>
<ul class="list">
<li><p>Inside the jar folder, there are multiple .jar files. This collection of files belongs to Glugen and JOGL.</p></li>
<li><p>JOAMP provides native libraries that support various operating 
systems such as Windows, Solaris, Linux and Android. Hence, you need to 
take appropriate jar files which can execute on your desired platform. 
For example, if you are using Windows 64-bit operating system, then get 
the following .jar files from the jar folder −</p>
<ul class="list">
<li>gluegenrt.jar</li>
<li>jogl-all.jar</li>
<li>gluegen-rt-natives-windows-amd64.jar</li>
<li>jogl-all-natives-windowsamd64.jar</li>
</ul>
</li>
</ul>
<img src="JOGL%20Quick%20Guide_tiedostot/jar_files.jpg" alt="JAR Files">
<h2>Setting up JOGL for Eclipse 4.4</h2>
<p>Follow the given procedure for setting up JOGL −</p>
<h3>Adding Libraries</h3>
<p><b>Step 1</b> − Open Eclipse.</p>
<p><b>Step 2</b> − Create a new project.</p>
<p><b>Step 3</b> − Create a new folder named <i>lib</i> in the project folder.</p>
<p><b>Step 4</b> − Copy the files <i>gluegen-rt-natives-windows-amd64.jar, gluegenrt.jar, jogl-all-natives-windowsamd64.jar</i> and <b>jogl-all.jar</b> into the <i>lib</i> folder.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/eclipse1.jpg" alt="Eclipse1">
<p><b>Step 5</b> − Now select these files and right click your mouse button. A shortcut menu is displayed, which contains <b>Build Path &gt; Add to Build Path.</b></p>
<img src="JOGL%20Quick%20Guide_tiedostot/eclipse2.jpg" alt="Eclipse2">
<p><b>Step 6</b> − To make all .jar files available to other projects, 
go to main menu. Select Window &gt; Preferences. The Preferences window 
appears.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/eclipse3.jpg" alt="Eclipse3">
<img src="JOGL%20Quick%20Guide_tiedostot/eclipse4.jpg" alt="Eclipse4">
<ul class="list">
<li><p>In preferences window, in the drop down menu on the left hand side, follow the hierarchy- Java → Build Path → User Libraries.</p></li>
<li><p>Click on “New…” button.</p></li>
<li><p>It opens up a dialog box. Enter the library name as jogl2.1.</p></li>
<li><p>Add jar files <b>glugen-rt.jar</b> and <b>jogl-all.jar</b> using button “Add External JARs...”.</p></li>
<li><p>It creates a new user library named <b>jogl2.1.</b></p></li>
</ul>
<p>In the same way, we can add java documentation and source code for the added.jar files.</p>
<h3>Adding Native Libraries</h3>
<p><b>Step 1</b> − Expand the jogl-all.jar node, select Javadoc location (none).</p>
<p><b>Step 2</b> − Click on “New…” button. Enter the name for JOGL Java Document.</p>
<p><b>Step 3</b> − Click on “Add External JARs…” button.</p>
<p><b>Step 4</b> − It opens a dialog box where you need to select the 
location of JOGL Java documentation, which we already have downloaded 
earlier.</p>
<h3>Adding source code</h3>
<p><b>Step 1</b> − Select the node Native library location: (None).</p>
<p><b>Step 2</b> − Click on “New…” button.</p>
<p><b>Step 3</b> − Enter name for native libraries and click “OK” button.</p>
<p><b>Step 4</b> − Click on “Add External JARs…” button.</p>
<p><b>Step 5</b> − Now select the path where native library files <i>('gluegen-rt-natives-windows-amd64.jar and joglall-natives-windows-amd64.jar')</i> are located.</p>
<p><b>Step 6</b> − Repeat the same procedure for source code.</p>
<p><b>Step 7</b> − We can set the locations for Javadoc, source code and jar files in the same way as given above for both native library files <b>glegen-rt.jar</b> and <b>glugen-natives-windows-amd64.jar.</b></p>
<h2>Setting up JOGL for NetBeans 4.4</h2>
<p>Let us go through the steps for setting up JOGL for NetBeans 4.4 −</p>
<h3>Adding Libraries</h3>
<p><b>Step 1</b> − In the main menu, select <b>Tools &gt; Libraries</b>.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans1.jpg" alt="NetBeans1">
<p><b>Step 2</b> − It leads you to <b>Ant Library Manager</b>.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans2.jpg" alt="NetBeans2">
<p><b>Step 3</b> − Under the <b>Classpath</b> tab, click <b>New Library</b> button located on the left lower corner. It opens a small dialog box.</p>
<p><b>Step 4</b> − Enter Library name as <b>JoGl2.0.</b></p>
<p><b>Step 5</b> − Click on “OK” button.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans3.jpg" alt="NetBeans3">
<p><b>Step 6</b> − Click on “Add JAR/Folder…” button.</p>
<p><b>Step 7</b> − Select the path where .jar files <b>jogl.all.jar</b> and <b>gluegen-rt.jar</b> are located.</p>
<p>To include JOGL library into each project, follow the steps given below −</p>
<p><b>Step 1</b> − Right-click on the <b>project name</b>. It shows a short-cut menu.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans4.jpg" alt="NetBeans4">
<p><b>Step 2</b> − Select <b>Properties.</b> It opens a window named <b>Project properties</b>.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans7.jpg" alt="NetBeans7">
<p><b>Step 3</b> − Select <b>Libraries</b> from Categories on the left hand side.</p>
<p><b>Step 4</b> − Select <b>Compile tab</b> and click on “Add Library...” button. Add library dialog box comes up.</p>
<p><b>Step 5</b> − Now add JOGL2.0 library, which you created earlier.</p>
<h3>Including Native Library in Each Project</h3>
<p>Follow the given steps to include native library in each project −</p>
<p><b>Step 1</b> − Right-click the project.</p>
<p><b>Step 2</b> − Select <b>Set Configuration &gt; Customize…</b></p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans8.jpg" alt="NetBeans8">
<p>It leads you to the <b>Project Properties</b> window.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/netbeans9.jpg" alt="NetBeans9">
<p><b>Step 3</b> − On the right hand side, in <b>VM options,</b> click on “Customize” button.</p>
<p><b>Step 4</b> − Browse for the path that contains JOGL native libraries <b>gluegen-rtnatives-windows-amd64.jar''</b> and <b>'jogl-all-natives-windowsamd64.jar.</b></p>
<h3>Adding Java Documentation of Native Libraries</h3>
<p>You need to open Ant library manager again to make sources and Javadoc available for each project. Follow the given procedure −</p>
<p><b>Step 1</b> − Open <b>main menu</b>.</p>
<p><b>Step 2</b> − Select <b>Tools &gt; Libraries</b>. This leads you to <b>Library manager</b>.</p>
<p><b>Step 3</b> − Under the <b>JavaDoc</b> tab, click on “New Library…” button.</p>
<p><b>Step 4</b> − Enter <b>JOGLJavadoc</b> name. (You can enter any desired name.)</p>
<p><b>Step 5</b> − Click on “Add jars/libraries…” button.</p>
<p><b>Step 6</b> − Select the path where unzipped <b>JOGL documentation</b> code is located.</p>
<h3>Adding Source Code of Native Libraries</h3>
<p><b>Step 1</b> − Under <b>Sources</b> tab, click on “New Library…” button. Enter <b>JOGLsources</b> name.</p>
<p><b>Step 2</b> − Click on “Add jars/libraries…” button. Select the path where unzipped source code is located.</p>
<h3>Customizing the JDK Editor</h3>
<p><b>Step 1</b> − Set <b>Classpath</b> for files <b>jogl.all.jar</b> and <b>gluegen-rt.jar.</b></p>
<p><b>Step 2</b> − Set path to native libraries <i>gluegen-rt-natives-windows-amd64.jar</i> and <i>joglall-natives-windowsamd64.jar</i> or copy all the jar files from the folder where you have downloaded them and paste them into the <b>jse lib</b> folder.</p>
<h1>JOGL - API for Basic Template</h1>
<p>Using JOGL programming, it is possible to draw various graphical 
shapes such as straight lines, triangles, 3D shapes including special 
effects such as rotation, lighting, colors, etc. To draw objects in JOGL
 first of all we have to construct a basic JOGL frame. Below given are 
the classes required to  construct a basic frame.</p>
<h2>GLEventListener Interface</h2>
<p>To make your program capable of using JOGL graphical API, you need to implement <b>GLEventListener</b> interface. You can find the <b>GLEventListener</b> interface in the <b>javax.media.opengl</b> package.</p>
<p>The following table provides the details of various methods and descriptions of <b>GLEventListener</b> interface −</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No.</th>
<th>Methods and Descriptions</th>
</tr>
<tr>
<td>1</td>
<td><p><b>Void display(GLAutoDrawable drawable)</b></p>
<p>It is called by the object of GLAutoDrawable interface to initiate 
OpenGL rendering by the client. i.e., this method contains the logic 
used to draw graphical elements using OpenGL API.</p>
</td>
</tr>
<tr>
<td>2</td>
<td><p><b>Void dispose(GLAutoDrawable drawable)</b></p>
<p>This method signals the listener to perform the release of all OpenGL
 resources per each GLContext, such as memory buffers and GLSL programs.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>Void init(GLAutoDrawble drawable)</b></p>
<p>It is called by the object of GLAutoDrawable interface immediately after the OpenGL context is initialized.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>Void reshape(GLAutoDrawble drawble, int x, int y, int width, int height)</b></p>
<p>It is called by the object of GLAutoDrawable interface during the 
first repaint after the component has been resized. It is also called 
whenever the position of the component on the window, is changed.</p>
</td>
</tr>
</tbody></table>
<p>All the methods of <b>GLEventListener</b> require object of <b>GLAutoDrawable</b> interface as a parameter.</p>
<h2>GLAutoDrawable Interface</h2>
<p>This interface supplies an event-based mechanism <b>(GLEventListener)</b> for performing OpenGL rendering. <b>GLAutoDrawable</b> automatically creates a primary rendering context which is associated with <b>GLAutoDrawable</b> for the lifetime of the object.</p>
<p>The following table provides the details of various methods and descriptions of <b>GLAutoDrawable</b> interface −</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No</th>
<th>Methods and Descriptions</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GL getGL()</b></p>
<p>Returns the GL pipeline object that is used by the current object of GLAutoDrawable interface.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>void addGLEventListener(GLEventListener Listener)</b></p>
<p>Adds the given listener to the end of current drawable queue.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>void addGLEventListener(int index, GLEventListener listener)</b></p>
<p>Adds the given listener at the given index of this drawable queue.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>void destroy()</b></p>
<p><b>Destroys</b> all resources associated with this object of GLAutoDrawable interface, including the GLContext.</p>
</td>
</tr>
</tbody></table>
<p><b>Note</b> − There are other methods in this package. Only a few important methods pertaining to template are discussed in this interface.</p>
<h2>GLCanvas Class</h2>
<p><b>GLCanvas</b> and <b>GLJpanel</b> are the two main classes of JOGL GUI that implement <b>GLAutoDrawable</b> interface, which can be utilized as drawing surfaces for OpenGL commands.</p>
<p>GLCanvas is a heavyweight AWT component which provides OpenGL rendering support. This is the primary implementation of an <b>AWTAutoGLDrawable</b> interface. It also inherits <b>java.awt.Canvas</b> class. Since it is a heavyweight component, in certain cases, <b>GLJCanvas</b>
 may not integrate with swing component correctly. Therefore, care must 
be taken while using it with Swing. Whenever you face problems with <b>GLJCanvas</b>, then you must use <b>GLJPanel</b> class.</p>
<p>The hierarchical diagram of class <b>GLCanvas</b> can be as shown below −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/canvas.jpg" alt="Canvas">
<ul class="list">
<li><p><b>GLEventistener</b> interface works along with <b>GLCanvas</b> class. It responds to the changes in <b>GLCanvas</b> class and to the drawing requests made by them.</p></li>
<li><p>Whenever <b>GLCanvas</b> class is instantiated, the <b>init()</b> method of <b>GLEventListener</b> is invoked. You can override this method to initialize the OpenGL state.</p></li>
<li><p>Whenever <b>GLCanvas</b> is drawn initially (instantiated) or resized, the <b>reshape()</b> method of <b>GLEventListener</b>
 is executed. It is used to initialize the OpenGL viewport and 
projection matrix. It is also called whenever the component's location 
is changed.</p></li>
<li><p>The display() method of <b>GLEventListener</b> contains the code for rendering 3D scene. It is invoked whenever display() method of <b>GLCanvas</b> is invoked.</p></li>
</ul>
<p>Below given are the constructors required to instantiate GLCanvas class.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No</th>
<th>Constructor and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GLCanvas()</b></p>
<p>It creates a new GLCanvas component with a default set of OpenGL 
capabilities, using the default OpenGL capabilities selection mechanism,
 on the default screen device.</p>
</td>
</tr>
<tr>
<td>2</td>
<td><p><b>GLCanvas(GLCapabilitiesImmutable)</b></p>
<p>It creates a new GLCanvas component with the requested set of OpenGL 
capabilities using the default OpenGL capabilities selection mechanism 
on the default screen device.</p>
</td>
</tr>
</tbody></table>
<p>Below given are the methods used for event handling of GLCanvas class.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr. No.</th>
<th>Methods and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>void addGLEventListener(GLEventListener listener)</b></p>
<p>Adds the given listener to the end of this drawable queue.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>void addGLEventListener(int indexGLEventListener listener)</b></p>
<p>Adds the given listener at the given index of this drawable queue.</p></td>
</tr>
</tbody></table>
<p>To instantiate <b>GLCanvas</b> class, you need the object of <b>GLCapabilitiesImmutable</b> interface, which specifies an immutable set of OpenGL capabilities.</p>
<p>One of the ways to get an object of <b>CapabilitiesImmutable</b> interface is to instantiate <b>GLCapabilities</b> class, which implements the interface. An instance of <b>GLCapabilities</b> class can be used to serve the purpose.</p>
<h2>GLCapabilities Class</h2>
<p>This class specifies a set of OpenGL capabilities. It takes GLCapabilities object as a parameter. The <b>GLCapabilities</b> class describes the desired capabilities that a rendering context must support, such as the OpenGL profile.</p>
<p>Below given is a constructor to instantiate GLCapabilities class</p>
<table class="table table-bordered">
<tbody><tr>
<th style="width:12%;">Sr. No.</th>
<th>Methods and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GLCapabilities(GLProfile glprofile)</b></p>
<p>It creates a GLCapabilities object.</p></td>
</tr>
</tbody></table>
<p>To instantiate <b>GLCanvas</b> class, you need an object of GLCapabilitiesImmutable interface, which specifies an immutable set of OpenGL capabilities.</p>
<p>One of the ways to get an object of <b>CapabilitiesImmutable</b> interface is to instantiate <b>GLCapabilities</b> class, which implements the interface. The instance of <b>GLCapabilities</b> class can be used to serve the purpose.</p>
<p>The <b>GLCapabilities</b> class in turn requires a <b>GLProfile</b> object.</p>
<h2>GLProfile Class</h2>
<p>Since several versions of OpenGL API were released; you need to 
specify the exact version of OpenGL API being used in your program to 
your Java Virtual Machine (JVM). This is done using the <b>GLProfile</b> class.</p> 
<p>The <b>get()</b> method of this class accepts different predefined <b>String</b>
 objects as parameters. Each String object is a name of an interface and
 each interface supports certain versions of OpenGL. If you initialize 
this class as static and singleton, it gives you singleton <b>GLProfile</b> objects for each available JOGL profile.</p>
<p>Below given is the prototype of the get method of GLProfile class.</p>
<table class="table table-bordered">
<tbody><tr>
<th style="width:12%;">Sr.No.</th>
<th>Method and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>Static GLProfile get(String profile)</b></p>
<p>Uses the default device.</p></td>
</tr>
</tbody></table>
<p>As this is a static method, you need to invoke it using the class 
name, and it
requires a predefined static string variable as parameter. There are 12 
such variables in this class, each represents an individual 
implementation of GL interface.</p>
<pre class="result notranslate">GLProfile.get(GLProfile.GL2);
</pre>
<h3>Parameters of get() method</h3>
<section class="toggle">
<label><i class="icon icon-minus"></i><i class="icon icon-plus"></i>The following table shows the String parameters of the <b>get()</b> method of <b>GLProfile</b> class −</label>
<div class="toggle-content">
<table class="table table-bordered ">
<tbody><tr>
<th>Sr.No</th>
<th>Predefined String value (Interface name) and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GL2</b></p>
<p>This interface contains all OpenGL [1.0 … 3.0] methods as well as 
most of its extensions defined at the time of this specification.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>GLES1</b></p>
<p>This interface contains all OpenGL ES [1.0 ... 1.1] methods as well 
as most of its extensions defined at the time of this specification.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>GLES2</b></p>
<p>This interface contains all OpenGL ES 2.0 methods as well as most of its extensions defined at the time of this specification.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>GLES3</b></p>
<p>This interface contains all OpenGL ES 3.0 methods as well as most of its extensions defined at the time of this specification.</p>
</td>
</tr>
<tr>
<td>5</td>
<td><p><b>GL2ES1</b></p>
<p>This Interface contains the common subset of GL2 and GLES1.</p></td>
</tr>
<tr>
<td>6</td>
<td><p><b>GL2ES2</b></p>
<p>This Interface contains the common subset of GL3, GL2, and GLES2.</p></td>
</tr>
<tr>
<td>7</td>
<td><p><b>GL2GL3</b></p>
<p>This Interface contains the common subset of core GL3 (OpenGL 3.1+) and GL2.</p>
</td>
</tr>
<tr>
<td>8</td>
<td><p><b>GL3</b></p>
<p>This interface contains all OpenGL [3.1 ... 3.3] <i>core</i> methods as well as most of its extensions defined at the time of this specification.</p>
</td>
</tr>
<tr>
<td>9</td>
<td><p><b>GL3bc</b></p>
<p>This interface contains all OpenGL [3.1 ... 3.3] <i>compatibility</i> methods, as well as most of its extensions defined at the time of this specification.</p></td>
</tr>
<tr>
<td>10</td>
<td><p><b>GL3ES3</b></p>
<p>This interface contains the common subset of core GL3 (OpenGL 3.1+) and GLES3 (OpenGL ES 3.0).</p></td>
</tr>
<tr>
<td>11</td>
<td><p><b>GL4</b></p>
<p>This interface contains all OpenGL [4.0 ... 4.3] <i>core</i> methods, as well as most of its extensions defined at the time of this specification.</p></td>
</tr>
<tr>
<td>12</td>
<td><p><b>GL4bc</b></p>
<p>This interface contains all OpenGL [4.0 ... 4.3] <i>compatibility profile</i>, as <i>well as most of its extensions defined at the time of this specification.</i></p></td>
</tr>
<tr>
<td>13</td>
<td><p><b>GL4ES3</b></p>
<p>Interface containing the common subset of core GL4 (OpenGL 4.0+) and GLES3 (OpenGL ES 3.0).</p></td>
</tr>
</tbody></table>
</div>
</section>
<h2>GLJPanel Class</h2>
<p>It is a lightweight Swing component which provides OpenGL rendering support. It
is provided for compatibility with Swing.</p>
<h3>GLJPanel Class Hierarchy</h3>
<p>Below given is diagram represents the class hierarchey of GLJPanel class.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/gljpanel.jpg" alt="GJPanel">
<p>Below given are various constructors GLJPanel class.</p>
<table class="table table-bordered">
<tbody><tr>
<th style="width:11%;">Sr. No.</th>
<th>Constructors and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GJPanel()</b></p>
<p>It creates a new GLJPanel component with a default set of OpenGL capabilities.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>(GLCapabilitiesImmutable)</b></p>
<p>It creates a new GLJPanel component with the requested set of OpenGL capabilities.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>GLJPanel(GLCapabilitiesImmutable userCapsRequest, GLCapabilitiesChooser chooser)</b></p>
<p>It creates a new GLJPanel component.</p></td>
</tr>
</tbody></table>
<p>Below given are the methods of GLJPanel class.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No.</th>
<th>Methods and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>void addGLEventListener(GLEventListener listener)</b></p>
<p>This method adds the given listener to the end of this drawable queue.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>void addGLEventListener(int indexGLEventListener listener)</b></p>
<p>This method adds the given listener at the given index of this drawable queue.</p>
</td>
</tr>
</tbody></table>
<h1>JOGL - Canvas with AWT</h1>
<p>This chapter explains you how to draw a JOGL basic frame using Canvas
 with AWT frame. In here we will construct a AWT Frame and add the 
canvas object to the AWT frame using the <b>add()</b> method of the frame class.</p>
<p>Below given are the steps to write a program which creates a JOGL 
basic frame with the combination of JOGL's Canvas class and AWT's Frame 
class.</p>
<h2>Step1: Creating the Class</h2>
<p>Initially create a class that implements <b>GlEventListener</b> interface and import the package javax.media.opengl. Implement all four methods <b>display(), dispose(),</b> <b>reshape(), init().</b> Since this is the basic frame, primitive tasks such as creating canvas class, adding it to frame were discussed. All the <b>GLEVentListener</b> interface methods were left unimplemented.</p>
<h2>Step2: Preparing the Canvas</h2>
<p><b>(a)</b> Constructing the <b>GLCanvas</b> class object</p>
<pre class="result notranslate">final GLCanvas glcanvas = new GLCanvas( xxxxxxx );

//here capabilities obj should be passed as parameter
</pre>
<p><b>(b)</b> Instantiating the <b>GLCapabilities</b> class</p>
<pre class="result notranslate">GLCapabilities capabilities = new GLCapabilities( xxxxx );

//here profile obj should be passed as parameter
</pre>
<p><b>(c)</b> Generating <b>GLProfile</b> object</p>
<p>As it is the static method, it is invoked using class name. Since 
this tutorial is about JOGL2, let us generate GL2 interface object.</p>
<pre class="result notranslate">final GLProfile profile = GLProfile.get( GLProfile.GL2 );

// both, variable and method are static hence both are called using class name.
</pre>
<p>Let us see the code snippet for canvas.</p>
<pre class="result notranslate">//getting the capabilities object of GL2 profile

final GLProfile profile = GLProfile.get(GLProfile.GL2);
GLCapabilities capabilities = new GLCapabilities(profile);

// The canvas
final GLCanvas glcanvas = new GLCanvas(capabilities);
</pre>
<p><b>(d)</b> Now add <b>GLEventListener</b> to the canvas using the method <b>addGLEventListener()</b>. This method needs object of <b>GLEventListener</b> interface as parameter. Hence, pass object of a class that implements <b>GLEventListener</b>.</p>
<pre class="result notranslate">BasicFrame basicframe = newBasic Frame( );// class which implements
GLEventListener interface
glcanvas.addGLEventListener( basicframe );
</pre>
<p><b>(e)</b> Set size of the frame using setSize() method inherited by GLCanvas from javax.media.opengl.awt.AWTGLAutoDrawable.</p>
<pre class="result notranslate">glcanvas.setSize( 400, 400 );
</pre>
<p>Now you are ready with <b>GLCanvas</b>.</p>
<h2>Step3: Creating the Frame</h2>
<p>Create the frame by instantiating the <b>Frame</b> class Object of JSE AWT frame component.</p>
<p>Add canvas to it and make the frame visible.</p>
<pre class="result notranslate">//creating frame
final Frame frame = new frame( " Basic Frame" );

//adding canvas to frame
frame.add( glcanvas );
frame.setVisible( true ); 
</pre>
<h2>Step 4: Viewing the Frame in Full Screen</h2>
<p>To view the frame in full screen, get the default screen size using <b>java.awt.Toolkit</b> class. Now, using those default screen size dimensions, set the frame size using <b>setSize()</b> method.</p>
<pre class="result notranslate">Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
frame.setSize(screenSize.width, screenSize.height);
</pre>
<p>Let us go through the program to generate the basic frame using AWT −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">BasicFrame</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
        
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">BasicFrame</span><span class="pln"> b </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BasicFrame</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">b</span><span class="pun">);</span><span class="pln">        
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
        
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">Frame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Frame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Basic Frame"</span><span class="pun">);</span><span class="pln">
        
      </span><span class="com">//adding canvas to frame</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">640</span><span class="pun">,</span><span class="pln"> </span><span class="lit">480</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
</span><span class="pun">}</span></pre>
<p>If you compile and execute the above program, the following output is generated.
It shows a basic frame formed when we use <b>GLCanvas</b> class with AWT −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/basic_frame.jpg" alt="Basic Frame">
<h1>JOGL - Canvas with Swing</h1>
<p>This chapter explains you how to draw a JOGL basic frame using <b>Canvas</b>, and <b>JFrame</b>
 class of javax.swing package. In here we will instantiate a JFrame and 
add the canvas object to the instance of JFrame using the <b>add()</b> method.</p>
<p>Using Canvas with AWT gives you a graphical frame with heavyweight 
features. For having a lightweight graphical frame, you need to use <b>GLCanvas</b> with Swing. While using <b>GLCanvas</b> with Swing, you can place <b>GLCanvas</b> in the <b>JFrame</b> window directly, or you can add it to <b>JPanel</b>.</p>
<p>Below given is the program which creates a JOGL basic frame with the combination of JOGL's <b>GLCanvas</b> class and <b>JFrame</b> class of the <i>javax.swing</i> package.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">BasicFrame</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
               
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">BasicFrame</span><span class="pln"> b </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BasicFrame</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">b</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
		
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Basic Frame"</span><span class="pun">);</span><span class="pln">
		
      </span><span class="com">//adding canvas to it</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of classimport          </span></pre>
<p>If you compile and execute the above program, the following output is generated.
It shows a basic frame formed when we use <b>GLCanvas</b> with Swing window.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/basic_frame.jpg" alt="Basic Frame">
<h1>JOGL - GLJPanel Class</h1>
<p>This chapter explains you how to draw a JOGL basic frame using 
GLJpanel class. It is a lightweight Swing component which provides 
OpenGL rendering support. It is provided for compatibility with Swing. 
In here we will instantiate a JFrame and add the GLJpanel object to the 
instance of JFrame using the <b>add()</b> method.</p>
<p>The following program generates a basic frame using <b>GLJPanel</b> with Swing window −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">BasicFrame</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">// The GLJpanel class</span><span class="pln">
      </span><span class="typ">GLJPanel</span><span class="pln"> gljpanel </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLJPanel</span><span class="pun">(</span><span class="pln"> glcapabilities </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">BasicFrame</span><span class="pln"> b </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">BasicFrame</span><span class="pun">();</span><span class="pln">
      gljpanel</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">b</span><span class="pun">);</span><span class="pln">
      gljpanel</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Basic Frame"</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//adding canvas to it</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> gljpanel</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of classimport</span></pre>
<p>If you compile and execute the above program, the following output is generated.
It shows a basic frame formed when we use <b>GLJPanel</b> with swing window −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/basic_frame.jpg" alt="Basic Frame">
<h1>JOGL - Drawing Basics</h1>
<p>OpenGL API has provided primitive methods for drawing basic graphical
 elements such as point, vertex, line etc. Using these methods, you can 
develop shapes such as triangle, polygon and circle. In both, 2D and 3D 
dimensions. This chapter teaches you how to draw a basic line using JOGL
 in a Java program.</p>
<h2>Drawing Objects</h2>
<p>To access programs which are specific to a hardware and operating 
system platforms and where the libraries are written in other languages 
such as C and C++ (native applications), Java uses a programming 
framework called <b>Java Native Interface (JNI)</b>. JOGL uses this interface internally to access OpenGL functions as shown in the following diagram.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/jni.jpg" alt="JNI">
<p>All the four methods of <b>GLEventListener</b> interface have the 
code (java JOGL methods) to call OpenGL functions internally. Naming of 
those JOGL methods is also similar to the naming conventions of OpenGL. 
If the function name in OpenGL is <b>glBegin()</b>, it is used as <b>gl.glBegin()</b>.</p>
<p>Whenever the <b>gl.glBegin()</b> method of java JOGL is called, it internally invokes the <b>glBegin()</b> method of OpenGL. This is the reason for installing native library files on the user system at the time of installing JOGL.</p>
<h2>The Display() Method</h2>
<p>This is an important method which holds the code for developing graphics. It
requires the <b>GLAutoDrawable</b> interface object as its parameter.</p>
<p>The <b>display()</b> method initially gets OpenGL context using the 
object of GL interface (GL inherits GLBase interface which contains 
methods to generate all OpenGL context objects). Since this tutorial is 
about JOGL2, let us generate a GL2 object.</p>
<p>The following code snippet shows how to generate a GL2 Object −</p>
<pre class="result notranslate">//Generating GL object
GL gl = drawable.getGL();
GL gl = drawable.getGL();

//Using this Getting the Gl2 Object
//this can be written in a single line like
final GL2 gl = drawable.getGL().getGL2();
</pre>
<p>Using the object of GL2 interface, one can access the members of this interface,
which in turn provide access to OpenGL [1.0... 3.0] functions.</p>
<h2>Drawing a Line</h2>
<p>GL2 interface contains a huge list of methods but here three main important
methods are discussed namely <b>glBegin()</b>, <b>glVertex()</b>, and <b>glEnd()</b>.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No.</th>
<th>Methods and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>glBegin()</b></p>
<p>This method starts the process of drawing a line. It takes predefined
 string integer “GL_LINES” as a parameter, which is inherited from GL 
interface.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>glVertex3f()/glVertex2f()</b></p>
<p>This method creates the vertex and we have to pass coordinates as 
parameters 3f and 2f, which denote 3-dimensional floating point 
coordinates and 2-dimensional floating point coordinates respectively.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>glEnd()</b></p>
<p>ends the line</p></td>
</tr>
</tbody></table>
<p>Below given is the program to draws a basic line using JOGL −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Line</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
            
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="com">//static field</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.50f</span><span class="pun">,-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

   </span><span class="pun">}</span><span class="pln">
            
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
            
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

      </span><span class="com">//getting the capabilities object of GL2 profile        </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Line</span><span class="pln"> l </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Line</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">l</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">"straight Line"</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//adding canvas to frame</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
                 
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of classimport javax.media.opengl.GL2;</span></pre>
<img src="JOGL%20Quick%20Guide_tiedostot/line.jpg" alt="Line">
<h1>JOGL - Drawing with GL Lines</h1>
<p>In the Previous chapter we have learned how draw a basic line using JOGL. We draw lines by passing a predefined field, <b>Gl_lines</b> to <i>glBegin()</i> method.</p>
<p>This chapter provides examples to draw shapes like triangle, rhombus and a house, using glBegin() method and GL_Lines.</p>
<p>Let us go through a program to draw a triangle using GL_LINES −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Triangle</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//drawing the base</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   
      </span><span class="com">//drawing the right edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   
      </span><span class="com">//drawing the lft edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Triangle</span><span class="pln"> l </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Triangle</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">l</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Triangle"</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//adding canvas to frame</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
          
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of classimport javax.media.opengl.GL2;</span></pre>
<p>If you compile and execute the above program, the following output is generated.
It shows a triangle drawn using GL_LINES of <b>glBegin()</b> method.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangle.jpg" alt="Triangle">
<p>Let us go through a program to draw a rhombus using GL_LINES −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Rhombus</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//edge1  </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//edge2</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//edge3</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//edge4</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Rhombus</span><span class="pln"> rhombus </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Rhombus</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> rhombus </span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"Rhombus"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//adding canvas to frame</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
</span><span class="pun">}</span></pre>
<p>If you compile and execute the above program, you get the following output. It shows a rhombus generated using GL_LINES of <b>glBegin()</b> method.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/rhombus.jpg" alt="Rhombus">
<p>Let us go through a program to draw a house using GL_LINES −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">House</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//drawing top</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//drawing bottom</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.3f</span><span class="pun">,-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//drawing the right edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//drawing the left edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.3f</span><span class="pun">,-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//building roof</span><span class="pln">
      </span><span class="com">//building lft dia</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.6f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//building rt dia</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.6f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.3f</span><span class="pun">,</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//building door</span><span class="pln">
      </span><span class="com">//drawing top</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//drawing the left edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//drawing the right edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.05f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.3f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">       
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">House</span><span class="pln"> house </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">House</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> house </span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pun">(</span><span class="pln"> </span><span class="str">"House"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
   
      </span><span class="com">//adding canvas to frame</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of class</span></pre>
<p>If you compile and execute the above program, you get the following 
output. It shows a house diagram generated using GL_LINES() method.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/house.jpg" alt="House">
<h1>JOGL - Pre Defined Shapes</h1>
<p>In the Previous chapters we have learned how draw a shapes such as 
line, triangle, rhombus using JOGL. We draw lines by passing a 
predefined field, <b>Gl_lines</b> to <i>glBegin()</i> method.</p>
<p>Other than <b>GL_LINES</b>, the <b>glBegin()</b> method accepts eight more parameters. You can use them to draw different shapes. These are used the same way as GL_LINES.</p>
<p>The following table shows the <b>glBegin()</b> method parameters along with their description −</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No</th>
<th>Parameters and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GL_LINES</b></p>
<p>Creates each pair of vertices as an independent line segment.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>GL_LINE_STRIP</b></p>
<p>Draws a connected group of line segments from the first vertex to the last.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>GL_LINE_LOOP</b></p>
<p>Draws a connected group of line segments from the first vertex to the last, again back to the first.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>GL_TRIANGLES</b></p>
<p>Treats each triplet of vertices as an independent triangle.</p></td>
</tr>
<tr>
<td>5</td>
<td><p><b>GL_TRIANGLE_STRIP</b></p>
<p>Draws a connected group of triangles. One triangle is defined for each vertex presented after the first two vertices.</p></td>
</tr>
<tr>
<td>6</td>
<td><p><b>GL_TRIANGLE_FAN</b></p>
<p>Draws a connected group of triangles. One triangle is defined for each vertex presented after the first two vertices.</p></td>
</tr>
<tr>
<td>7</td>
<td><p><b>GL_QUADS</b></p>
<p>Treats each group of four vertices as an independent quadrilateral.</p></td>
</tr>
<tr>
<td>8</td>
<td><p><b>GL_QUAD_STRIP</b></p>
<p>Draws a connected group of quadrilaterals. One quadrilateral is 
defined for each pair of vertices presented after the first pair.</p></td>
</tr>
<tr>
<td>9</td>
<td><p><b>GL_POLYGON</b></p>
<p>Draws a single, convex polygon. Vertices 1,…,n define this polygon.</p></td>
</tr>
</tbody></table>
<p>Let us see some examples using <b>glBegin()</b> parameters.</p>
<h3>Program to draw a Line Strip</h3>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LineStrip</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pun">{</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINE_STRIP</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.50f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.70f</span><span class="pun">,-</span><span class="lit">0.70f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">LineStrip</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LineStrip</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">r</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">"LineStrip"</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//adding canvas to frame</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
            
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of classimport javax.media.opengl.GL2;</span></pre>
<p>If you compile and execute the above code, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/linestrip.jpg" alt="LineStrip">
<h3>Code snippet for display() method to draw a Line Loop</h3>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINE_LOOP</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.7f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">.</span><span class="lit">5f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.70f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.70f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>If you replace the <b>display()</b> method of any of the basic template programs with the above code, compile, and execute it, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/line_loop.jpg" alt="Line Loop">
<h3>Code snippet for display() method to draw a triangle using GL_TRIANGLES</h3>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLES</span><span class="pun">);</span><span class="pln">        </span><span class="com">// Drawing Using Triangles</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln">       </span><span class="com">// Top</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.2f</span><span class="pun">,-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln">    </span><span class="com">// Bottom Left</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln">      </span><span class="com">// Bottom Right</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>If you replace the <b>display()</b> method of any of the basic template programs with the above code, compile, and execute it, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangles.jpg" alt="Triangles">
<h3>Code snippet for display() method to draw a Triangle Strip</h3>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glBegin </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLE_STRIP</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.50f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.28f</span><span class="pun">,</span><span class="lit">0.06f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.7f</span><span class="pun">,-</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>If you replace the <b>display()</b> method of any of the basic template programs with the above code, compile and execute it, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangle_strip.jpg" alt="Triangle Strip">
<h3>Code snippet for display() method to draw a quadrilateral</h3>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_QUADS</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>If you replace the <b>display()</b> method of any of the basic template programs with the above code, compile, and execute it, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/quads.jpg" alt="Quads">
<h3>Code snippet for display() method to draw a polygon</h3>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_POLYGON</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   
   gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>If you replace <b>display()</b> method of any of the basic template programs with the above code, compile, and execute it, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/polygon.jpg" alt="Polygon">
<h1>JOGL - Transformation</h1>
<p>OpenGL provides more features such as applying colors to an object, 
scaling, lighting, rotating an object, etc. This chapter describes some 
of the transformations on objects using JOGL.</p>
<h2>Moving an Object on the Window</h2>
<p>In earlier chapters, we discussed the programs for drawing a line and
 drawing various shapes using simple lines. The shapes created in this 
way can be displayed on any location within the window. It is done using
 the method <b>glTranslatef (float x, float y, float z)</b>.</p>
<p>This method belongs to the <b>GLMatrixFunc</b> interface, which is in the <b>javax.media.opengl.fixedfunc</b> package.</p>
<h3>GLMatrixFunc Interface</h3>
<p><b>interface</b> − GLMatrixFunc</p>
<p><b>package</b> − javax.media.opengl.fixedfunc</p>
<p>The following table lists some important methods of this interface −</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No.</th>
<th>Methods and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>void glRotatef(float angle, float x, float y, float z)</b></p>
<p>Rotates the current matrix.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>void glScalef(float x, float y, float z)</b></p>
<p>Used to scale the current matrix.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>void glTranslatef(float x, float y,float z)</b></p>
<p>Used to translate the current matrix.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>void glLoadIdentity()</b></p>
<p>Loads the current matrix with identity matrix.</p></td>
</tr>
</tbody></table>
<p>The <b>glTranslate()</b> method moves the origin of the coordinate system to the point specified by the parameters (x,y,z), passed to the <b>glTranslate()</b> method as</p>
<p>argument. To save and restore the untranslated coordinate system, <b>glPushMatrix()</b> and <b>glPopMatrix()</b> methods are used.</p>
<pre class="result notranslate">gl.glTranslatef(0f, 0f, -2.5f); 
</pre>
<p>Whenever <b>glTranslate()</b> is used, it changes the position of the component on the screen. Hence, the <b>reshape()</b> method of <b>GLEventListener</b> interface should be overridden and OpenGL viewport and projection matrix should be initialized.</p>
<p>The following code shows the template to initialize a view port and projection matrix −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln">  </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
  
   </span><span class="com">// TODO Auto-generated method stub </span><span class="pln">
   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">  
            
   </span><span class="com">// get the OpenGL 2 graphics object   </span><span class="pln">
   </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">height </span><span class="pun">&lt;=</span><span class="lit">0</span><span class="pun">)</span><span class="pln"> height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> 
       
   </span><span class="com">//preventing devided by 0 exception height = 1; </span><span class="pln">
   </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln"> 
            
   </span><span class="com">// display area to cover the entire window </span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height</span><span class="pun">);</span><span class="pln"> 
            
   </span><span class="com">//transforming projection matrix </span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION</span><span class="pun">);</span><span class="pln"> 
   gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln"> 
   glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pun">);</span><span class="pln"> 
      
   </span><span class="com">//transforming model view gl.glLoadIdentity(); </span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW</span><span class="pun">);</span><span class="pln"> 
   gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln"> 
</span><span class="pun">}</span></pre>
<h1>JOGL - Coloring</h1>
<p>This chapter teaches you how to apply colours to the objects using JOGL. To apply colour to an object, use the method <b>glColor()</b> of <b>GL2</b>. Below given is the syntax for using glColor method.</p>
<h2>Syntax</h2>
<pre class="result notranslate">gl.glColorXY(1f,0f,0f); 
</pre>
<p>where,</p>
<ul class="list">
<li><p>X denotes the number of colours used, 3 (red, green, blue) or 
4(red, green, blue, alpha). To get various colour combinations, the 
values of these colours are passed as parameters. The sequence of the 
colour parameters must be maintained in that order.</p>
<p><b>Example</b></p>
<p>If you pass colour values as (1, 0, 0), then you get red colour. Similarly, (1, 1, 0) gives you yellow colour.</p></li>
<li><p>Y denotes the data type which accepts parameters such as byte(b),
 double(d), float(f), int(i), short(s), ubyte(ub), uint(ui), and 
ushort(us).</p></li>
</ul>
<pre class="result notranslate">gl.glColor3f(1f,0f,0f);   //gives us red          
gl.glColor3f(0f,1f,0f);   //gives us green            
gl.glColor3f(0f,0f,1f);   //gives us blue
</pre>
<p>In case of triangle, you can apply different colors for each vertex.</p>
<p>Let us go through the program to apply colors to a triangle −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln"> 
 
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TriangleColor</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 

   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLES </span><span class="pun">);</span><span class="pln">  
      
      </span><span class="com">// Drawing Using Triangles </span><span class="pln">
    
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   </span><span class="com">// Red </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">    </span><span class="com">// Top </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">1.0f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">     </span><span class="com">// green </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.2f</span><span class="pun">,-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">     </span><span class="com">// blue </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   </span><span class="com">// Bottom Right </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">         
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">//method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body    </span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">    
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
          
      </span><span class="com">// The canvas  </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">TriangleColor</span><span class="pln"> triangle </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">TriangleColor</span><span class="pun">();</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> triangle </span><span class="pun">);</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   
      
      </span><span class="com">//creating frame </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Colored Triangle"</span><span class="pun">);</span><span class="pln"> 
          
      </span><span class="com">//adding canvas to it </span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   
      
   </span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of class </span></pre>
<p>When you compile and execute the above program, you get the following colored triangle −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangle_color.jpg" alt="Triangle Color">
<h2>Applying Color to a Polygon</h2>
<p>Let us go through the program to apply colors to a polygon −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">PolygonColor</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 

   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">//applying red  </span><span class="pln">
  
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_POLYGON </span><span class="pun">);</span><span class="pln"> 
      
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln">  </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln"> 
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">//method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">   
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">    
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   
      </span><span class="com">//getting the capabilities object of GL2 profile  </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln"> 
      
      </span><span class="com">// The canvas  </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">PolygonColor</span><span class="pln"> polygon </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PolygonColor</span><span class="pun">();</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> polygon </span><span class="pun">);</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      
      </span><span class="com">//creating frame </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"Colored Polygon"</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      
      </span><span class="com">//adding canvas to frame </span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">    
      
   </span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of main </span><span class="pln">
	
 </span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of class </span></pre>
<p>When you compile and execute the above program, you get the following coloured Polygon −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/colored_polygon.jpg" alt="Polygon Color">
<h1>JOGL - Scaling</h1>
<p>This chapter teaches you how to scale an object ie., increase or decrease the size of an object using JOGL.</p>
<p>Scaling an object is done by using the <b>glScalef(float x, float y, float z)</b> method of <b>GLMatrixFunc</b>
 interface. This method accepts three floating point parameters, using 
which we specify the scale factors along the x, y, and z axes 
respectively.</p>
<p>For example, in the following program, a triangle is diminished to 
50%. Here, the value 50 is passed as parameter along all the axes.</p>
<p>Let us go through the program to scale a triangle −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">
 
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Scaling</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
 
   </span><span class="lit">@Override</span><span class="pln"> 
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glScalef</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0.25f</span><span class="pun">,</span><span class="lit">0.50f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLES </span><span class="pun">);</span><span class="pln">
		
      </span><span class="com">// Drawing Using Triangles </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   </span><span class="com">// Red </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">    </span><span class="com">// Top </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">1.0f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">     </span><span class="com">// blue </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.2f</span><span class="pun">,-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">     </span><span class="com">// green </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   </span><span class="com">// Bottom Right </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln"> 
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">//method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">   
   
      </span><span class="com">//getting the capabilities object of GL2 profile </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
        
      </span><span class="com">// The canvas  </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">Scaling</span><span class="pln"> scaling </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Scaling</span><span class="pun">();</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> scaling </span><span class="pun">);</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">  

      </span><span class="com">//creating frame </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame  </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Dimnished Triangle (Scaling )"</span><span class="pun">);</span><span class="pln">   

      </span><span class="com">//adding canvas to it </span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">         
      
   </span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of main </span><span class="pln">
	
</span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of classimport javax.media.opengl.GL2; </span></pre>
<p>On compiling and executing the above program, we get the following 
output. Here, you can observe a diminished triangle as compared to the 
original triangle produced by TriangleColor.java −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/scaling.jpg" alt="Scaling">
<h1>JOGL - Rotation</h1>
<p>In this chapter we explained you how to rotate an object using JOGL. 
Rotation of objects can be done along any of the three axes, using the <b>glRotatef(float angle, float x, float y, float z)</b> method of <b>GLMatrixFunc</b> interface. You need to pass an angle of rotation and x, y, z axes as parameters to this method.</p>
<p>The following steps guide you to rotate an object successfully −</p>
<ul class="list">
<li><p>Clear the color buffer and depth buffer initially using <b>gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT)</b> method. This method erases the previous state of the object and makes the view clear.</p></li>
<li><p>Reset the projection matrix using the <b>glLoadIdentity()</b> method.</p></li>
</ul>
<p>Instantiate the animator class and start the animator using the <b>start()</b> method.</p>
<h2>FPSAnimator Class</h2>
<p>Below given ar the various constructors of FPSAnimator class.</p>
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No.</th>
<th>Methods and Descriptions</th>
</tr>
<tr>
<td>1</td>
<td><p><b>FPSAnimator(GLAutoDrawable drawable, int fps)</b></p>
<p>It creates an FPSAnimator with a given target frames-per-second value and an initial drawable to animate.</p>
</td>
</tr>
<tr>
<td>2</td>
<td><p><b>FPSAnimator(GLAutoDrawable drawable, int fps, boolean cheduleAtFixedRate)</b></p>
<p>It creates an FPSAnimator with a given target frames-per-second 
value, an initial drawable to animate, and a flag indicating whether to 
use fixed-rate scheduling.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>FPSAnimator(int fps)</b></p>
<p>It creates an FPSAnimator with a given target frames-per-second value.</p></td>
</tr>
<tr>
<td>4</td>
<td>It creates an FPSAnimator with a given target frames-per-second 
value and a flag indicating whether to use fixed rate scheduling.</td>
</tr>
</tbody></table>
<p>It creates an FPSAnimator with a given target frames-per-second value
 and a flag indicating whether to use fixed rate scheduling.</p>
<p><b>start()</b> and <b>stop()</b> are the two important methods in this class. The following program shows how to rotate a triangle using FPSAnimator class −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">FPSAnimator</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TriangleRotation</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> rtri</span><span class="pun">;</span><span class="pln">  </span><span class="com">//for angle of rotation</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glClear </span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_COLOR_BUFFER_BIT </span><span class="pun">|</span><span class="pln">  GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_BUFFER_BIT </span><span class="pun">);</span><span class="pln">  
      
      </span><span class="com">// Clear The Screen And The Depth Buffer </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">  </span><span class="com">// Reset The View     </span><span class="pln">
              
      </span><span class="com">//triangle rotation      </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln"> rtri</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">  
              
      </span><span class="com">// Drawing Using Triangles </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLES </span><span class="pun">);</span><span class="pln">          
      
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   </span><span class="com">// Red </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.7f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">    </span><span class="com">// Top </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">1.0f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">     </span><span class="com">// blue </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.2f</span><span class="pun">,-</span><span class="lit">0.50f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">     </span><span class="com">// green </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">   </span><span class="com">// Bottom Right </span><span class="pln">
      
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">    
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln"> 
      
      rtri </span><span class="pun">+=</span><span class="lit">0.2f</span><span class="pun">;</span><span class="pln">  </span><span class="com">//assigning the angle               </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
	
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">//method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   
      </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
		
         </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
         </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile  </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln"> 
         </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities  </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln"> profile </span><span class="pun">);</span><span class="pln">

         </span><span class="com">// The canvas  </span><span class="pln">
         </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities</span><span class="pun">);</span><span class="pln"> 
         </span><span class="typ">TriangleRotation</span><span class="pln"> triangle </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">TriangleRotation</span><span class="pun">();</span><span class="pln"> 
         glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> triangle </span><span class="pun">);</span><span class="pln"> 
         glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">  

         </span><span class="com">// creating frame </span><span class="pln">
         </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Rotating Triangle"</span><span class="pun">);</span><span class="pln">

         </span><span class="com">// adding canvas to it </span><span class="pln">
         frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln"> 
         frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">()</span><span class="pln"> </span><span class="pun">.</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">                 
         frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
                
         </span><span class="com">//Instantiating and Initiating Animator </span><span class="pln">
         </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pln"> animator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">,</span><span class="pln"> </span><span class="lit">300</span><span class="pun">,</span><span class="kwd">true</span><span class="pun">);</span><span class="pln"> 
         animator</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln">
		
   </span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of class </span></pre>
<p>If you compile and execute the above program, it generates the 
following output. Here, you can observe various snapshots of a rotating 
the colored triangle around the x-axis.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangle_rotation.jpg" alt="Triangle Rotation">
<h1>JOGL - Lighting</h1>
<p>This chapter explains you how to apply lighting effect to an object using JOGL.</p>
<p>To set lighting, initially enable lighting using the <b>glEnable()</b> method. Then apply lighting for the objects, using the <b>glLightfv(int light, int pname, float[] params, int params_offset)</b> method of <b>GLLightingFunc</b> interface. This method takes four parameters.</p>
<p>The following table describes the parameters of <b>gllightfv()</b> method.</p>
<table class="table table-bordered ">
<tbody><tr>
<th>Sr.No.</th>
<th>Parameter Name and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>Light</b></p>
<p>Specifies a light. The number of lights depends on the 
implementation, but at least eight lights are supported. It accepts ten 
values, those parameters are discussed in a separate table named Light 
Source Parameters given below.</p>
</td>
</tr>
<tr>
<td>2</td>
<td><p><b>Pname</b></p>
<p>Specifies a single valued light source parameter. For light source, there are ten parameters as discussed below.</p>
</td>
</tr>
<tr>
<td>3</td>
<td><p><b>Params</b></p>
<p>Specifies a pointer to the value or values that is set to the parameter <i>pname</i> of light source <i>light</i>.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>Light source parameter</b></p>
<p>You can use any of the light source parameters given below.</p>
</td>
</tr>
</tbody></table>
<h2>Light source parameters</h2>
<section class="toggle">
<label><i class="icon icon-minus"></i><i class="icon icon-plus"></i>The following table shows the Light source parameters −</label>
<div class="toggle-content">
<table class="table table-bordered">
<tbody><tr>
<th>Sr.No.</th>
<th>Parameter and Description</th>
</tr>
<tr>
<td>1</td>
<td><p><b>GL_AMBIENT</b></p>
<p>It contains the parameters that specify the ambient intensity of the light.</p></td>
</tr>
<tr>
<td>2</td>
<td><p><b>GL_DIFFUSE</b></p>
<p>It contains the parameters that specify the diffuse intensity of the light.</p></td>
</tr>
<tr>
<td>3</td>
<td><p><b>GL_SPECULAR</b></p>
<p>It contains the parameters that specify the specular intensity of the light.</p></td>
</tr>
<tr>
<td>4</td>
<td><p><b>GL_POSITION</b></p>
<p>It contains four integer or floating-point values that specify the position of the light in homogeneous object coordinates.</p></td>
</tr>
<tr>
<td>5</td>
<td><p><b>GL_SPOT_DIRECTION</b></p>
<p>It contains parameters that specify the direction of light in homogeneous object coordinates.</p></td>
</tr>
<tr>
<td>6</td>
<td><p><b>GL_SPOT_EXPONENT</b></p>
<p>Its parameters specify the intensity distribution of light.</p></td>
</tr>
<tr>
<td>7</td>
<td><p><b>GL_SPOT_CUTOFF</b></p>
<p>The single parameter of this specifies the maximum spread angle of the light.</p>
</td>
</tr>
<tr>
<td>8</td>
<td><p><b>GL_CONSTANT_ATTENUATION or GL_LINEAR_ATTENUATION or GL_QUADRATIC_ATTENUATION </b></p>
<p>You can use any of these attenuation factors, which is represented by a single value.</p>
</td>
</tr>
</tbody></table>
</div>
</section>
<p>Lighting is enabled or disabled using <b>glEnable()</b> and <b>glDisable</b> () methods with the argument <b>GL_LIGHTING</b>.</p>
<p>The following template is given for lighting −</p>
<pre class="result notranslate">gl.glEnable(GL2.GL_LIGHTING); 
gl.glEnable(GL2.GL_LIGHT0);  
gl.glEnable(GL2.GL_NORMALIZE); 

float[] ambientLight = { 0.1f, 0.f, 0.f,0f };  // weak RED ambient 
gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_AMBIENT, ambientLight, 0); 

float[] diffuseLight = { 1f,2f,1f,0f };  // multicolor diffuse 
gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, diffuseLight, 0); 
</pre>
<h2>Applying Light to a Rotating Polygon</h2>
<p>Follow the given steps for applying light to a rotating polygon.</p>
<h3>Rotate the polygon using glRotate() method</h3>
<pre class="result notranslate">gl.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT); 
  
// Clear The Screen And The Depth Buffer  
gl.glLoadIdentity();  
                 
// Reset The View  
gl.glRotatef(rpoly, 0.0f, 1.0f, 0.0f); 
</pre>
<p>Let us go through the program to apply light to a rotating polygon −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln"> 
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln"> 

</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">FPSAnimator</span><span class="pun">;</span><span class="pln"> 
 
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">PolygonLighting</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> rpoly</span><span class="pun">;</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln"> 
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln"> </span><span class="com">//applying red</span><span class="pln">
      
      </span><span class="com">// Clear The Screen And The Depth Buffer </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClear</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_COLOR_BUFFER_BIT </span><span class="pun">|</span><span class="pln">  
      GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_BUFFER_BIT </span><span class="pun">);</span><span class="pln">   
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">       </span><span class="com">// Reset The View    </span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln"> rpoly</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_POLYGON </span><span class="pun">);</span><span class="pln"> 
      
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.5f</span><span class="pun">,-</span><span class="lit">0.2f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln"> 
		
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln"> 
      
      rpoly </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">0.2f</span><span class="pun">;</span><span class="pln">  </span><span class="com">//assigning the angle </span><span class="pln">
      
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LIGHTING </span><span class="pun">);</span><span class="pln">  
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LIGHT0 </span><span class="pun">);</span><span class="pln">  
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_NORMALIZE </span><span class="pun">);</span><span class="pln">  

      </span><span class="com">// weak RED ambient </span><span class="pln">
      </span><span class="kwd">float</span><span class="pun">[]</span><span class="pln"> ambientLight </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">0.1f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">};</span><span class="pln">  
      gl</span><span class="pun">.</span><span class="pln">glLightfv</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LIGHT0</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_AMBIENT</span><span class="pun">,</span><span class="pln"> ambient</span><span class="pun">-</span><span class="typ">Light</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">  

      </span><span class="com">// multicolor diffuse </span><span class="pln">
      </span><span class="kwd">float</span><span class="pun">[]</span><span class="pln"> diffuseLight </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">1f</span><span class="pun">,</span><span class="lit">2f</span><span class="pun">,</span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">};</span><span class="pln">  
      gl</span><span class="pun">.</span><span class="pln">glLightfv</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LIGHT0</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DIFFUSE</span><span class="pun">,</span><span class="pln"> diffuse</span><span class="pun">-</span><span class="typ">Light</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
   </span><span class="pun">}</span><span class="pln">  
      
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">//method body  </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
  
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body     </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
	
   </span><span class="lit">@Override</span><span class="pln"> 
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg2</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg3</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> arg4 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="com">// method body </span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
	
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   
      </span><span class="com">//getting the capabilities object of GL2 profile </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln"> profile</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// The canvas  </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln"> 
      </span><span class="typ">PolygonLighting</span><span class="pln"> polygonlighting </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PolygonLighting</span><span class="pun">();</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> polygonlighting </span><span class="pun">);</span><span class="pln"> 
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 

      </span><span class="com">//creating frame </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Polygon lighting "</span><span class="pun">);</span><span class="pln">  

      </span><span class="com">//adding canvas to it </span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln"> 
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">  
                    
      </span><span class="com">//Instantiating and Initiating Animator </span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pln"> animator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">,</span><span class="pln"> </span><span class="lit">300</span><span class="pun">,</span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
      animator</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span><span class="pln">                     
      
   </span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of main </span><span class="pln">
	
</span><span class="pun">}</span><span class="pln"> </span><span class="com">//end of class </span></pre>
<p>If you compile and execute the above program, it generates the 
following output. Here, you can observe various snapshots of a rotating 
polygon with lighting.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/polygon_lighting.jpg" alt="Polygon Lighting">
<h1>JOGL - 3D Basics</h1>
<p>In previous chapters we have seen how to create 2d objects, apply 
effects to it, and transform the object. This chapter teaches you how to
 draw a line with 3rd dimension, and some shapes.</p>
<p>Let us draw a simple line with z-axis and see the difference between 
2D and 3D lines. Draw a simple line first, then draw the second line 3 
units into the window.</p>
<p>Let us go through the program to draw a 3D line −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">
   
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Line3d</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">2.5f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      
      </span><span class="com">//3d line</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LINES </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pln"> </span><span class="pun">);</span><span class="com">// 3 units into the window</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0 </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> height </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="pln"> </span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
          
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Line3d</span><span class="pln"> line3d </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Line3d</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> line3d </span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
       
      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" 3d line"</span><span class="pun">);</span><span class="pln">
          
      </span><span class="com">//adding canvas to it</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of class</span></pre>
<p>When you compile and execute the above program, the following output is
generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/3d_line.jpg" alt="3D Line">
<p>3D shapes can be drawn by giving non-zero values to z quadrant of the <b>glVertex3f()</b> method, which generates the above view. Now joining the remaining lines will lead to a 3D edge.</p>
<p>Now in the same way let us develop an edge with 3rd dimension.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Edge1</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">2.5f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//3d line</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">

      </span><span class="com">//3 units in to the window</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//top</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//bottom</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">

   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">// TODO Auto-generated method stubfinal</span><span class="pln">
      GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">height </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">

   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Edge1</span><span class="pln"> b </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Edge1</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">b</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">

      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" 3d edge"</span><span class="pun">);</span><span class="pln">

      </span><span class="com">//adding canvas to it</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of class</span></pre>
<p>When you compile and execute the above program, the following output is generated −</p>
<img src="JOGL%20Quick%20Guide_tiedostot/3d_edge.jpg" alt="3D Edge">
<p>In the same way, by developing 3D edges to corresponding sides of any
 2D quadrilateral and joining the adjacent vertices, you can get a 3D 
quadrilateral.</p>
<p>Below given is a program to draw a rhombus using JOGL.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Rhombus</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
    
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">2.5f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">//drawing edge1.....</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln"> </span><span class="com">// 3 units into the window</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//top</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">// bottom</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   
      </span><span class="com">// edge 2....</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//Edge 3.............</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//final edge</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LINES</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="lit">0.75f</span><span class="pun">,</span><span class="lit">3f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> arg0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">// TODO Auto-generated method stub final</span><span class="pln">
      GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">height lt</span><span class="pun">;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">6</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">//getting the capabilities object of GL2 profile</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Rhombus</span><span class="pln"> b </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Rhombus</span><span class="pun">();</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">b</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">

      </span><span class="com">//creating frame</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Rhombus 3d"</span><span class="pun">);</span><span class="pln">

      </span><span class="com">//adding canvas to it</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="com">//end of main</span><span class="pln">
	
</span><span class="pun">}</span><span class="com">//end of classimport javax.media.opengl.GL2;</span></pre>
<p>When you compile and execute the above program, the following output is
generated. It shows a rhombus drawn using 3D lines.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/rhombus_3d.jpg" alt="Rhombus 3D">
<p>The predefined parameters of <b>glBegin()</b> method can be used for drawing 3D shapes.</p>
<h1>JOGL - 3D Triangle</h1>
<p>In previous chapter we have seen how to draw 3d shapes, this chapter teaches you how to draw 3d triangle and rotate it.</p>
<p>Below given is the program to draw a 3d triangle an rotate it.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">FPSAnimator</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Triangle3d</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> rtri </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">;</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">

      </span><span class="com">// Clear The Screen And The Depth Buffer</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClear</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_COLOR_BUFFER_BIT </span><span class="pun">|</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_BUFFER_BIT </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Reset The View</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">6.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Move the triangle</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln"> rtri</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLES </span><span class="pun">);</span><span class="pln"> 
        
      </span><span class="com">//drawing triangle in all dimensions</span><span class="pln">
      </span><span class="com">// Front</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Red</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Of Triangle (Front)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Green</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left Of Triangle (Front)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Blue</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right Of Triangle (Front)</span><span class="pln">
        
      </span><span class="com">// Right</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Red</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Of Triangle (Right)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Blue</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left Of Triangle (Right)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Green</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right Of Triangle (Right)</span><span class="pln">
        
      </span><span class="com">// Left</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Red</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Of Triangle (Back)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Green</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left Of Triangle (Back)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Blue</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right Of Triangle (Back)</span><span class="pln">
        
      </span><span class="com">//left</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Red</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Of Triangle (Left)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Blue</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left Of Triangle (Left)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Green</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right Of Triangle (Left)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Done Drawing 3d triangle (Pyramid)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln">
      rtri </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">0.2f</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">//method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">height lt</span><span class="pun">;=;)</span><span class="pln">
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="pln"> </span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln"> profile </span><span class="pun">);</span><span class="pln">
         
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Triangle3d</span><span class="pln"> triangle </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Triangle3d</span><span class="pun">();</span><span class="pln">
		
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> triangle </span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
		
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"3d Triangle (shallow)"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
		
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
		
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pln"> animator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">,</span><span class="lit">300</span><span class="pun">,</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      animator</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
</span><span class="pun">}</span></pre>
<p>When you compile and execute the above program, the following output 
is generated. Here, you have the snapshots of rotating 3D triangle. 
Since this program does not includes depth test, the triangle is 
generated hollow.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangle_3d.jpg" alt="Triangle 3D">
<p>To make the triangle solid, you need to enable depth test by using <b>glEnable(GL_DEPTH_TEST)</b>. Enabling the depth buffer gives you a blank
screen. This can be cleared by clearing the color using <b>glClear(GL_COLOR_BUFFERBIT | GL_DEPTH_BUFFER_BIT)</b> method. To enable depth test in the init() method or in the <b>glDisplay()</b> method, write the following code −</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
	
   gl</span><span class="pun">.</span><span class="pln">glShadeModel</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_SMOOTH</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glClearColor</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glClearDepth</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_TEST</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glDepthFunc</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LEQUAL</span><span class="pun">);</span><span class="pln">
   gl</span><span class="pun">.</span><span class="pln">glHint</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PERSPECTIVE_CORRECTION_HINT</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_NICEST</span><span class="pun">);</span><span class="pln">
 </span><span class="pun">}</span></pre>
<p>Below given is the Program to draw a 3D triangle with depth test.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">FPSAnimator</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Triangledepthtest</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> rtri </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">;</span><span class="pln"> 
	
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glShadeModel</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_SMOOTH </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearColor</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearDepth</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_TEST </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glDepthFunc</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LEQUAL </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glHint</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PERSPECTIVE_CORRECTION_HINT</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_NICEST</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Clear The Screen And The Depth Buffer</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClear</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_COLOR_BUFFER_BIT </span><span class="pun">|</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_BUFFER_BIT</span><span class="pun">);</span><span class="pln"> 
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Reset The View</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">0.5f</span><span class="pun">,</span><span class="lit">0.0f</span><span class="pun">,-</span><span class="lit">6.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Move the triangle</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln"> rtri</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_TRIANGLES </span><span class="pun">);</span><span class="pln"> 

      </span><span class="com">//drawing triangle in all dimensions</span><span class="pln">
      </span><span class="com">//front</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Red</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Green</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Blue</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right)</span><span class="pln">

      </span><span class="com">//right</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right</span><span class="pln">

      </span><span class="com">//left</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left </span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right </span><span class="pln">

      </span><span class="com">//top</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Left</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Right</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Done Drawing 3d triangle (Pyramid)</span><span class="pln">

      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln">
      rtri </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">0.2f</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glShadeModel</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_SMOOTH </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearColor</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearDepth</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_TEST </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glDepthFunc</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LEQUAL </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glHint</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PERSPECTIVE_CORRECTION_HINT</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_NICEST </span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> height </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> 
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="pln"> </span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
      
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln"> profile </span><span class="pun">);</span><span class="pln">
		
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Triangledepthtest</span><span class="pln"> triangledepthtest </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Triangledepthtest</span><span class="pun">();</span><span class="pln">
		
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> triangledepthtest </span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
		
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">"3d Triangle (solid)"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pln"> animator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pun">(</span><span class="pln"> glcanvas</span><span class="pun">,</span><span class="pln"> </span><span class="lit">300</span><span class="pun">,</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
		
      animator</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
</span><span class="pun">}</span></pre>
<p>When you compile and execute the above program, the following output is generated.</p>
<p>Here, you can see the snapshots of a rotating 3D triangle. Since this
 program includes code for depth test, the triangle is generated solid.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/triangle_depth_test.jpg" alt="Triangle Depth Test">
<h1>JOGL - 3D Cube</h1>
<p>In the previous chapters we have seen how to draw 3d triangle and 
rotate it. Now in this chapter you can learn how to a 3d cube, how to 
rotate it, how to attach an image on it. In the same way, This chapter 
provides examples to draw a 3D cube and apply colours to it and attach 
image to it.</p>
<p>Below given is the program to draw a 3d cube and apply colours to it.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">DisplayMode</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">FPSAnimator</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Cube</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">DisplayMode</span><span class="pln"> dm</span><span class="pun">,</span><span class="pln"> dm_old</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> rquad </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">;</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClear</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_COLOR_BUFFER_BIT </span><span class="pun">|</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_BUFFER_BIT </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">5.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 

      </span><span class="com">// Rotate The Cube On X, Y &amp; Z</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln">rquad</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> 
 
      </span><span class="com">//giving different colors to different sides</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_QUADS</span><span class="pun">);</span><span class="pln"> </span><span class="com">// Start Drawing The Cube</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">);</span><span class="pln"> </span><span class="com">//red color</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Right Of The Quad (Top)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Left Of The Quad (Top)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left Of The Quad (Top)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Right Of The Quad (Top)</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">//green color</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Right Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Right Of The Quad </span><span class="pln">

      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">1f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">//blue color</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Right Of The Quad (Front)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Left Of The Quad (Front)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Right Of The Quad </span><span class="pln">

      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1f</span><span class="pun">,</span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">//yellow (red + green)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Right Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Right Of The Quad (Back)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Left Of The Quad (Back)</span><span class="pln">

      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1f</span><span class="pun">,</span><span class="lit">0f</span><span class="pun">,</span><span class="lit">1f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">//purple (red + green)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Right Of The Quad (Left)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Left Of The Quad (Left)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Right Of The Quad </span><span class="pln">

      gl</span><span class="pun">.</span><span class="pln">glColor3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="lit">1f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">//sky blue (blue +green)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Right Of The Quad (Right)</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Top Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Left Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> </span><span class="com">// Bottom Right Of The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Done Drawing The Quad</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln">
      rquad </span><span class="pun">-=</span><span class="pln"> </span><span class="lit">0.15f</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glShadeModel</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_SMOOTH </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearColor</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearDepth</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_TEST </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glDepthFunc</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_LEQUAL </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glHint</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_PERSPECTIVE_CORRECTION_HINT</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_NICEST </span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln"> height lt</span><span class="pun">;=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="pln"> </span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW </span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
      
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2 </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln"> profile </span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln"> capabilities </span><span class="pun">);</span><span class="pln">
      </span><span class="typ">Cube</span><span class="pln"> cube </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Cube</span><span class="pun">();</span><span class="pln">
		
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln"> cube </span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> </span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
		
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">" Multicolored cube"</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> glcanvas </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln"> frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pln"> animator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">,</span><span class="pln"> </span><span class="lit">300</span><span class="pun">,</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
		
      animator</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
</span><span class="pun">}</span></pre>
<p>When you compile and execute the above program, the following output is
generated. It shows a colored 3D cube.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/multicolored_cube.jpg" alt="Multicolored Cube">
<h2>Applying Texture to the Cube</h2>
<p>The following steps are given to apply texture to a cube −</p>
<ul class="list">
<li><p>You can bind required texture to the cube using the
<b>gl.glBindTexture(GL2.GL_TEXTURE_2D.texture)</b> method of the Drawable interface.</p></li>
<li><p>This method requires texture (int) argument along with <b>GL2.GL_TEXTURE_2D(int)</b>.</p></li>
<li><p>Before you execute <b>Display()</b>, you need to create texture variable</p></li>
<li><p>In the <b>init()</b> method or in the starting lines of <b>glDisplay()</b> method, enable the texture <b>using gl.glEnable(GL2.GL_TEXTURE_2D)</b> method.</p></li>
<li><p>Create the texture object, which needs a file object as a parameter, which
in turn needs the path of the image used as the texture to the object.</p></li>
</ul>
<pre class="result notranslate">File file = new File(“c:\\pictures\\boy.jpg”);
Texture t = textureIO.newTexture(file, true);
texture = t.getTextureObject(gl);
</pre>
<ul class="list">
<li>Handle the ‘file not found’ exception</li>
</ul>
<p>Below given is the program to attach image on a cube.</p>
<pre class="prettyprint notranslate prettyprinted" style=""><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">DisplayMode</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">File</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">IOException</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLAutoDrawable</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLCapabilities</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLEventListener</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="typ">GLProfile</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">awt</span><span class="pun">.</span><span class="typ">GLCanvas</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">media</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">glu</span><span class="pun">.</span><span class="pln">GLU</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">swing</span><span class="pun">.</span><span class="typ">JFrame</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">FPSAnimator</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">texture</span><span class="pun">.</span><span class="typ">Texture</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">jogamp</span><span class="pun">.</span><span class="pln">opengl</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="pln">texture</span><span class="pun">.</span><span class="typ">TextureIO</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">CubeTexture</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">GLEventListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">DisplayMode</span><span class="pln"> dm</span><span class="pun">,</span><span class="pln"> dm_old</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> GLU glu </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> GLU</span><span class="pun">();</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> xrot</span><span class="pun">,</span><span class="pln">yrot</span><span class="pun">,</span><span class="pln">zrot</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> texture</span><span class="pun">;</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> display</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClear</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_COLOR_BUFFER_BIT </span><span class="pun">|</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_BUFFER_BIT</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Reset The View</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTranslatef</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">5.0f</span><span class="pun">);</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln">xrot</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln">yrot</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glRotatef</span><span class="pun">(</span><span class="pln">zrot</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glBindTexture</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_TEXTURE_2D</span><span class="pun">,</span><span class="pln"> texture</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glBegin</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_QUADS</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Front Face</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Back Face</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Top Face</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Bottom Face</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Right face</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Left Face</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glTexCoord2f</span><span class="pun">(</span><span class="lit">0.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln"> gl</span><span class="pun">.</span><span class="pln">glVertex3f</span><span class="pun">(-</span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0f</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnd</span><span class="pun">();</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glFlush</span><span class="pun">();</span><span class="pln">

      </span><span class="com">//change the speeds here</span><span class="pln">
      xrot </span><span class="pun">+=</span><span class="pln"> </span><span class="pun">.</span><span class="lit">1f</span><span class="pun">;</span><span class="pln">
      yrot </span><span class="pun">+=</span><span class="pln"> </span><span class="pun">.</span><span class="lit">1f</span><span class="pun">;</span><span class="pln">
      zrot </span><span class="pun">+=</span><span class="pln"> </span><span class="pun">.</span><span class="lit">1f</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dispose</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// method body</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> init</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
	
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
		
      gl</span><span class="pun">.</span><span class="pln">glShadeModel</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_SMOOTH</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearColor</span><span class="pun">(</span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glClearDepth</span><span class="pun">(</span><span class="lit">1.0f</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_DEPTH_TEST</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glDepthFunc</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_LEQUAL</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glHint</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PERSPECTIVE_CORRECTION_HINT</span><span class="pun">,</span><span class="pln"> GL2</span><span class="pun">.</span><span class="pln">GL_NICEST</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">//</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glEnable</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_TEXTURE_2D</span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">try</span><span class="pun">{</span><span class="pln">
		
         </span><span class="typ">File</span><span class="pln"> im </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">File</span><span class="pun">(</span><span class="str">"E:\\office\\boy.jpg "</span><span class="pun">);</span><span class="pln">
         </span><span class="typ">Texture</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> </span><span class="typ">TextureIO</span><span class="pun">.</span><span class="pln">newTexture</span><span class="pun">(</span><span class="pln">im</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
         texture</span><span class="pun">=</span><span class="pln"> t</span><span class="pun">.</span><span class="pln">getTextureObject</span><span class="pun">(</span><span class="pln">gl</span><span class="pun">);</span><span class="pln">
          
      </span><span class="pun">}</span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">){</span><span class="pln">
         e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
      
   </span><span class="lit">@Override</span><span class="pln">
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> reshape</span><span class="pun">(</span><span class="typ">GLAutoDrawable</span><span class="pln"> drawable</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> x</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> height</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> GL2 gl </span><span class="pun">=</span><span class="pln"> drawable</span><span class="pun">.</span><span class="pln">getGL</span><span class="pun">().</span><span class="pln">getGL2</span><span class="pun">();</span><span class="pln">
      </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">height lt</span><span class="pun">;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
         height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
			
      </span><span class="kwd">final</span><span class="pln"> </span><span class="kwd">float</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> width </span><span class="pun">/</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">float</span><span class="pun">)</span><span class="pln"> height</span><span class="pun">;</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glViewport</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> width</span><span class="pun">,</span><span class="pln"> height</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_PROJECTION</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
		
      glu</span><span class="pun">.</span><span class="pln">gluPerspective</span><span class="pun">(</span><span class="lit">45.0f</span><span class="pun">,</span><span class="pln"> h</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20.0</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glMatrixMode</span><span class="pun">(</span><span class="pln">GL2</span><span class="pun">.</span><span class="pln">GL_MODELVIEW</span><span class="pun">);</span><span class="pln">
      gl</span><span class="pun">.</span><span class="pln">glLoadIdentity</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   
      </span><span class="com">// TODO Auto-generated method stub</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pln"> profile </span><span class="pun">=</span><span class="pln"> </span><span class="typ">GLProfile</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="typ">GLProfile</span><span class="pun">.</span><span class="pln">GL2</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">GLCapabilities</span><span class="pln"> capabilities </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCapabilities</span><span class="pun">(</span><span class="pln">profile</span><span class="pun">);</span><span class="pln">
      
      </span><span class="com">// The canvas</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pln"> glcanvas </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">GLCanvas</span><span class="pun">(</span><span class="pln">capabilities</span><span class="pun">);</span><span class="pln">
      </span><span class="typ">CubeTexture</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">CubeTexture</span><span class="pun">();</span><span class="pln">
		
      glcanvas</span><span class="pun">.</span><span class="pln">addGLEventListener</span><span class="pun">(</span><span class="pln">r</span><span class="pun">);</span><span class="pln">
      glcanvas</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="lit">400</span><span class="pun">,</span><span class="pln"> </span><span class="lit">400</span><span class="pun">);</span><span class="pln">
		
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> frame </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">JFrame</span><span class="pln"> </span><span class="pun">(</span><span class="str">" Textured Cube"</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">);</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setSize</span><span class="pun">(</span><span class="pln">frame</span><span class="pun">.</span><span class="pln">getContentPane</span><span class="pun">().</span><span class="pln">getPreferredSize</span><span class="pun">());</span><span class="pln">
      frame</span><span class="pun">.</span><span class="pln">setVisible</span><span class="pun">(</span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">final</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pln"> animator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FPSAnimator</span><span class="pun">(</span><span class="pln">glcanvas</span><span class="pun">,</span><span class="pln"> </span><span class="lit">300</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln">
		
      animator</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
	
</span><span class="pun">}</span></pre>
<p>When you compile and execute the above program, the following output 
is generated. You can see a 3D cube with desired texture applied on it.</p>
<img src="JOGL%20Quick%20Guide_tiedostot/textured_cube.jpg" alt="Texture Cube">
<h1>JOGL - Appendix</h1>
<p><b>GPU</b> − Graphical processing unit, it is a special electronic device that accelerates the rendering of images.</p>
<p><b>JNI</b> − Java Native Interface. Using which, java access native methods.</p>
<p><b>Model</b> − They are the objects constructed from basic graphics primitives such as points, lines and polygons.</p>
<p><b>Pixel</b> − Smallest unit of display seen on the screen.</p>
<p><b>Projection</b> − The method of mapping the coordinates of an object to a two-dimensional plane is called projection.</p>
<p><b>Projection matrix</b> − It is a linear transformation of an object on the 2D surface.</p>
<p><b>Rendering</b> − A process by which computer creates images from models.</p>
<p><b>Viewport</b> − A viewport is a viewing region on the screen in computer graphics.</p>
<hr>
<div class="pre-btn">
<a href="https://www.tutorialspoint.com/jogl/jogl_appendix.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="https://www.tutorialspoint.com/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="nxt-btn">
<a href="https://www.tutorialspoint.com/jogl/jogl_useful_resources.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="JOGL%20Quick%20Guide_tiedostot/show_ads.js">
</script><ins id="aswift_1_expand" style="display:inline-table;border:none;height:400px;margin:0;padding:0;position:relative;visibility:visible;width:580px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:400px;margin:0;padding:0;position:relative;visibility:visible;width:580px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0px;width:580px;height:400px;" width="580" height="400" frameborder="0"></iframe></ins></ins>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="JOGL%20Quick%20Guide_tiedostot/facebookIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="JOGL%20Quick%20Guide_tiedostot/twitterIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="JOGL%20Quick%20Guide_tiedostot/linkedinIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="JOGL%20Quick%20Guide_tiedostot/googlePlusIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="JOGL%20Quick%20Guide_tiedostot/StumbleUponIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/jogl/jogl_quick_guide.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="JOGL%20Quick%20Guide_tiedostot/reddit.jpg" alt="img">
</a>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//--></script>
<script src="JOGL%20Quick%20Guide_tiedostot/show_ads.js">
</script><ins id="aswift_2_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;" data-ad-slot="right_side_ad"><ins id="aswift_2_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;border:0px;width:300px;height:250px;" width="300" height="250" frameborder="0"></iframe></ins></ins>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="JOGL%20Quick%20Guide_tiedostot/show_ads.js">
</script><ins id="aswift_3_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;"><ins id="aswift_3_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;border:0px;width:300px;height:600px;" width="300" height="600" frameborder="0"></iframe></ins></ins>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script src="JOGL%20Quick%20Guide_tiedostot/show_ads.js">
</script><ins id="aswift_4_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;" data-ad-slot="right_side_ad"><ins id="aswift_4_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;border:0px;width:300px;height:250px;" width="300" height="250" frameborder="0"></iframe></ins></ins>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="https://www.tutorialspoint.com/index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="JOGL%20Quick%20Guide_tiedostot/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="https://www.tutorialspoint.com/about/about_privacy.htm">Privacy Policy</a></li>
         <li><a href="https://www.tutorialspoint.com/about/about_cookies.htm">Cookies Policy</a></li>
         <li><a href="https://www.tutorialspoint.com/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>© Copyright 2019. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input type="text" class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<div id="privacy-banner" style="display: inherit;">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="javascript:void(0)">Accept</a>
      <a id="banner-learn" href="https://www.tutorialspoint.com/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script>
// Banner Trigger if Not Closed
if (!localStorage.bannerClosed) {
  document.getElementById('privacy-banner').style.display = "inherit";
} else {
  document.getElementById('privacy-banner').style.display = "none";
}
document.getElementById('banner-accept').addEventListener('click', function() {
  document.getElementById('privacy-banner').style.display = "none";
  localStorage.bannerClosed = 'true';
});
if (navigator.userAgent.match(/Opera|OPR\//)) {
  document.getElementById('privacy-banner').style.display = "inherit";
}
</script>
<!-- Libs -->
<script src="JOGL%20Quick%20Guide_tiedostot/custom-min.js"></script><a class="scroll-to-top visible" href="#" id="scrollToTop"><i class="icon icon-chevron-up icon-white"></i></a>
<script src="JOGL%20Quick%20Guide_tiedostot/urchin.js">
</script>
<script>
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>



<div class="autocomplete-suggestions "></div><iframe id="google_osd_static_frame_878979782987" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;"></iframe><ins class="adsbygoogle adsbygoogle-noablate" style="display: none !important;" data-adsbygoogle-status="done"><ins id="aswift_5_expand" style="display:inline-table;border:none;height:0px;margin:0;padding:0;position:relative;visibility:visible;width:0px;background-color:transparent;"><ins id="aswift_5_anchor" style="display:block;border:none;height:0px;margin:0;padding:0;position:relative;visibility:visible;width:0px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_5" name="aswift_5" style="left:0;position:absolute;top:0;border:0px;width:0px;height:0px;" frameborder="0"></iframe></ins></ins></ins></body><iframe id="google_esf" name="google_esf" src="JOGL%20Quick%20Guide_tiedostot/zrt_lookup.html" style="display: none;" data-ad-client="ca-pub-7133395778201029"></iframe></html>