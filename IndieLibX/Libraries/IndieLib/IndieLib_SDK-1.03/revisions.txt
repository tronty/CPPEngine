----------------------------------------------------------------------


IndieLib Revisions

Current release: 1.03


----------------------------------------------------------------------


ABOUT REV 0004 - 02 January 2008

Fairly innocuous but helpful bug fix release.

[ features ]

+ Added Render::BlitColoredTriangle () method, for rendering triangles with differen color for each of the faces.

[ bug fixes ]

+ Fixed some color glitches on Primitives

+ Fixed wrong name in GetPosZ()

+ Fixed return value on IND_Entity2dManager::Delete ()

+ Render::Reset() => Fixed a bug related when window resize


----------------------------------------------------------------------


ABOUT REV 0003 - 21 December 2008

Fairly innocuous but helpful bug fix release.

[ features ]

+ IND_Entity2d::SetShow(), IND_Entity2d::IsShow(): showes / hides a 2d / 3d entity.

+ Some corrections to the tutorials on the wiki.

+ Some english mistakes fixed in the documentation [By Nomad].

+ Some project improvements, in order to directly execute a tutorial pressing F5 from vc2008 and being able to compile all together [By Nomad].


----------------------------------------------------------------------


ABOUT REV 0002 - 22 April 2008

Fairly innocuous but helpful bug fix release.

[ features ]

+ Update SDL version 1.2.13.0

+ The .exe tutorials now have text explaining their input controls.

+ Grid methods for IND_Surface objects are now documented.

+ Several small error from documentation are now fixed.

[ bug fixes ]

+ Fixed Windows Vista problem when reseting the Direct3d Device. Now IndieLib is 100%     
  Vista compatible. Thanks to Tape_Worm [EX3] and others.

+ All the tutorials entities are now time dependent.

+ Deleted one redundant instance of IND_3dMeshManager in the tutorials. Thanks
  to Ciri.

+ Fixed IND_Entity3d::GetPosZ(), that before was called GetPozZ() and was always 
  "sleeping". Thanks to Ciri.


----------------------------------------------------------------------


ABOUT REV 0001 - 08 April 2008

First release!

[ features ]

+ Simple interface and extreme easiness: really fast game prototyping using entities
  for each of the graphical objects and changing their attributes. All the methods 
  are as simple as "SetPos", "SetCollisionArea", "SetFade", "SetTransparency", etc.

+ Translations, rotation, mirroring and scaling of sprites.

+ Alpha blending, transparency, tinting and fading of sprites.

+ Render images of any size (not only power of two). You can load images as big as
  10000x10000 pixels or more, and IndieLib will cut them internally in smaller blocks.
  Furthermore, IndieLib will automatically discard all the blocks out of the screen, 
  also if your sprites are transformed and the camera making a zoom or rotated, only 
  what you see is what is going to be rendered.

+ SetGrid method in order to create grids for your sprites. Later you can move each
  grid point in order to make a lot of different effects like waves, etc.

+ 2d and 3d camera concepts, completely independent of the graphical objects. Easy
  methods to translate, rotate or zoom you camera.

+ Easily creation of several viewports. Just create as many viewports as you want using
  different cameras assigned to them. This is really useful for making widescreen games,
  etc.

+ Scrolls of any size, with automatic block discarding.

+ Animation system using XML animation scripts, for defining the frames and sequences.

+ Advanced collision system. Create an xml file defining your collision areas per sprite
  using circles, rectangles or triangles. You can define as many collision groups as you
  want, each one with a different name. Join this file to an entity object and  check   
  collision between the collision groups of other entities. Don't worry about 
  translating, rotating or scaling your entities, the collision groups will always fit
  perfectly your entity. You can also have sprite animations in which each frame has
  different collision groups (imagine this feature in a "Street Fighter" type game).

+ Bitmap font system, for drawing graphical texts of fonts created with MudgeFont for
  IndieLib. Change the alignment, char spacing and line spacing easily.

+ Rendering of 3d Meshes (you can mix 2d and 3d easily). You can also apply
  transformations to them (rotation, scaling, fading, etc). This will allow you to 
  make games like "New Super Mario Bros" in which the characters are 3d models and the
  scenario is 2d.

+ Light manager, for lighting your 3d models. Enable / Disable lights, change
  their attributes, etc.

+ Timers. Start, stop, pause them easily.

+ Entity class, for both 2d and 3d objects, for managing the graphical objects in a
  really easy way. Just create an entity, join a graphical object to it, an change it's
  attributes (space transformations, color transformations, etc).

+ Image class, for loading / saving different types of image files and for accessing to
  the bitmaps directly. You can also apply filters to the images like gaussian, noise,
  equalize, saturation, etc.

+ Direct blitting of primitives (rectangles, circles, polygons, lines, etc).

+ Mouse and keyboard input. Check if any key/button has been pressed, is being pressed
  or has been pressed more than n milliseconds. Check combination of keys/buttons that
  are pressed at the same time. 

----------------------------------------------------------------------

