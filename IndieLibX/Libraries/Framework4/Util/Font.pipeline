
/* * * * * * * * * * * * * Author's note * * * * * * * * * * * *\
*   _       _   _       _   _       _   _       _     _ _ _ _   *
*  |_|     |_| |_|     |_| |_|_   _|_| |_|     |_|  _|_|_|_|_|  *
*  |_|_ _ _|_| |_|     |_| |_|_|_|_|_| |_|     |_| |_|_ _ _     *
*  |_|_|_|_|_| |_|     |_| |_| |_| |_| |_|     |_|   |_|_|_|_   *
*  |_|     |_| |_|_ _ _|_| |_|     |_| |_|_ _ _|_|  _ _ _ _|_|  *
*  |_|     |_|   |_|_|_|   |_|     |_|   |_|_|_|   |_|_|_|_|    *
*                                                               *
*                     http://www.humus.name                     *
*                                                                *
* This file is a part of the work done by Humus. You are free to   *
* use the code in any way you like, modified, unmodified or copied   *
* into your own work. However, I expect you to respect these points:  *
*  - If you use this file and its contents unmodified, or use a major *
*    part of this file, please credit the author and leave this note. *
*  - For use in anything commercial, please request my approval.     *
*  - Share your work and ideas too as much as you can.             *
*                                                                *
\* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#ifdef VULKAN
	#define float4 vec4
	#define Texture2D texture2D
	#define SamplerState sampler
#endif

[Rootsig]

ROOT_BEGIN
	CONSTANT	float4 ScaleBias;

	RT_BEGIN Resources
		TEXTURE		Texture2D Texture;
	RT_END

	ST_BEGIN Samplers
		SAMPLER		SamplerState Filter;
	ST_END

ROOT_END

struct PsIn
{
#ifdef VULKAN
	vec2 TexCoord;
#else
	float4 Position: SV_Position;
	float2 TexCoord: TexCoord;
#endif
};

[Vertex: VertexShader]

#ifdef VULKAN
layout(location = 0) in vec2 Pos;
layout(location = 1) in vec2 TexCoord;
layout(location = 0) out PsIn Out;
void main()
{
	gl_Position = float4(Pos * ScaleBias.xy + ScaleBias.zw, 0.5, 1.0);
	Out.TexCoord = TexCoord;
}
#else
void main(out PsIn Out, float2 Pos: Vertex, float2 TexCoord: TexCoord)
{
	Out.Position = float4(Pos * ScaleBias.xy + ScaleBias.zw, 0.5, 1.0);
	Out.TexCoord = TexCoord;
}
#endif

[Pixel: PixelShader]

#ifdef VULKAN
layout(location = 0) out vec4 Out;
layout(location = 0) in PsIn In;
void main()
{
	Out = texture(sampler2D(Texture, Filter), In.TexCoord).rrrg;
}
#else
void main(out float4 Out : SV_Target, PsIn In)
{
	Out = Texture.Sample(Filter, In.TexCoord).rrrg;
}
#endif
