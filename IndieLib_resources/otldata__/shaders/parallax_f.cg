struct vertex2fragment { 
	float4 Position : POSITION;
	float2 TexCoord : TEXCOORD0;
	float3 LightDir : TEXCOORD1;
	float3 EyeVec : TEXCOORD2;
};


float4 main (vertex2fragment IN,
	uniform float4 lightcolor,
	uniform sampler2D TexDiffuse : TEXUNIT0,
	uniform sampler2D TexNormal : TEXUNIT1,
	uniform sampler2D TexHeight : TEXUNIT2) : COLOR
{
	float4 normEye = normalize(float4(IN.EyeVec,1));
	float3 normLight = normalize(IN.LightDir);
	
    float selfOcclusion = saturate(normLight.z*5);
	
	float4 height = 0.04 * tex2D(TexHeight, IN.TexCoord) - 0.02;
	float2 newTexcoord = (height * normEye).xy + IN.TexCoord;
	
	float4 diffuseCol = tex2D(TexDiffuse, newTexcoord);
	float4 bumpNormal = tex2D(TexNormal, newTexcoord);
	bumpNormal *= 2;
	bumpNormal -= 1;
	float3 normBumpNormal = normalize(bumpNormal.xyz);
	
	//lightcolor = (1,1,1,1);
		
	float bump = dot(normLight, normBumpNormal);
	float4 outCol = saturate(lightcolor*bump.xxxx);

	return selfOcclusion*saturate(outCol*diffuseCol);
	
	
}
